{"version":3,"file":"EmailTemplates-35af6070.js","sources":["../../../../frontend/src/components/ListViews/EmailTemplatesListView.vue","../../../../frontend/src/pages/EmailTemplates.vue"],"sourcesContent":["<template>\n  <ListView\n    :columns=\"columns\"\n    :rows=\"rows\"\n    :options=\"{\n      onRowClick: (row) => emit('showEmailTemplate', row.name),\n      selectable: options.selectable,\n      showTooltip: options.showTooltip,\n      resizeColumn: options.resizeColumn,\n    }\"\n    row-key=\"name\"\n  >\n    <ListHeader class=\"mx-5\" @columnWidthUpdated=\"emit('columnWidthUpdated')\" />\n    <ListRows id=\"list-rows\">\n      <ListRow\n        class=\"mx-5\"\n        v-for=\"row in rows\"\n        :key=\"row.name\"\n        v-slot=\"{ idx, column, item }\"\n        :row=\"row\"\n      >\n        <ListRowItem :item=\"item\">\n          <!-- <template #prefix>\n\n          </template> -->\n          <template #default=\"{ label }\">\n            <div\n              v-if=\"['modified', 'creation'].includes(column.key)\"\n              class=\"truncate text-base\"\n              @click=\"\n                (event) => emit('applyFilter', { event, idx, column, item })\n              \"\n            >\n              <Tooltip :text=\"item.label\">\n                <div>{{ item.timeAgo }}</div>\n              </Tooltip>\n            </div>\n            <div v-else-if=\"column.key === 'status'\" class=\"truncate text-base\">\n              <Badge\n                :variant=\"'subtle'\"\n                :theme=\"item.color\"\n                size=\"md\"\n                :label=\"item.label\"\n                @click=\"\n                  (event) => emit('applyFilter', { event, idx, column, item })\n                \"\n              />\n            </div>\n            <div v-else-if=\"column.type === 'Check'\">\n              <FormControl\n                type=\"checkbox\"\n                :modelValue=\"item\"\n                :disabled=\"true\"\n                class=\"text-gray-900\"\n              />\n            </div>\n            <div\n              v-else\n              class=\"truncate text-base\"\n              @click=\"\n                (event) => emit('applyFilter', { event, idx, column, item })\n              \"\n            >\n            {{ __(label) }}\n            </div>\n          </template>\n        </ListRowItem>\n      </ListRow>\n    </ListRows>\n    <ListSelectBanner>\n      <template #actions=\"{ selections, unselectAll }\">\n        <Dropdown :options=\"bulkActions(selections, unselectAll)\">\n          <Button icon=\"more-horizontal\" variant=\"ghost\" />\n        </Dropdown>\n      </template>\n    </ListSelectBanner>\n  </ListView>\n  <ListFooter\n    class=\"border-t px-5 py-2\"\n    v-model=\"pageLengthCount\"\n    :options=\"{\n      rowCount: options.rowCount,\n      totalCount: options.totalCount,\n    }\"\n    @loadMore=\"emit('loadMore')\"\n  />\n  <EditValueModal\n    v-model=\"showEditModal\"\n    v-model:unselectAll=\"unselectAllAction\"\n    doctype=\"Email Template\"\n    :selectedValues=\"selectedValues\"\n    @reload=\"list.reload()\"\n  />\n</template>\n<script setup>\nimport EditValueModal from '@/components/Modals/EditValueModal.vue'\nimport { globalStore } from '@/stores/global'\nimport { setupListActions, createToast } from '@/utils'\nimport {\n  ListView,\n  ListHeader,\n  ListRows,\n  ListRow,\n  ListSelectBanner,\n  ListRowItem,\n  ListFooter,\n  Dropdown,\n  call,\n  Tooltip,\n} from 'frappe-ui'\nimport { ref, watch, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\n\nconst props = defineProps({\n  rows: {\n    type: Array,\n    required: true,\n  },\n  columns: {\n    type: Array,\n    required: true,\n  },\n  options: {\n    type: Object,\n    default: () => ({\n      selectable: true,\n      showTooltip: true,\n      resizeColumn: false,\n      totalCount: 0,\n      rowCount: 0,\n    }),\n  },\n})\n\nconst emit = defineEmits([\n  'loadMore',\n  'updatePageCount',\n  'showEmailTemplate',\n  'columnWidthUpdated',\n  'applyFilter',\n])\n\nconst pageLengthCount = defineModel()\nconst list = defineModel('list')\n\nconst router = useRouter()\n\nconst { $dialog } = globalStore()\n\nwatch(pageLengthCount, (val, old_value) => {\n  if (val === old_value) return\n  emit('updatePageCount', val)\n})\n\nconst showEditModal = ref(false)\nconst selectedValues = ref([])\nconst unselectAllAction = ref(() => {})\n\nfunction editValues(selections, unselectAll) {\n  selectedValues.value = selections\n  showEditModal.value = true\n  unselectAllAction.value = unselectAll\n}\n\nfunction deleteValues(selections, unselectAll) {\n  $dialog({\n    title: __('Delete'),\n    message: __('Are you sure you want to delete {0} item(s)?', [\n      selections.size,\n    ]),\n    variant: 'danger',\n    actions: [\n      {\n        label: __('Delete'),\n        variant: 'solid',\n        theme: 'red',\n        onClick: (close) => {\n          call('frappe.desk.reportview.delete_items', {\n            items: JSON.stringify(Array.from(selections)),\n            doctype: 'Email Template',\n          }).then(() => {\n            createToast({\n              title: __('Deleted successfully'),\n              icon: 'check',\n              iconClasses: 'text-green-600',\n            })\n            unselectAll()\n            list.value.reload()\n            close()\n          })\n        },\n      },\n    ],\n  })\n}\n\nconst customListActions = ref([])\n\nfunction bulkActions(selections, unselectAll) {\n  let actions = [\n    {\n      label: __('Edit'),\n      onClick: () => editValues(selections, unselectAll),\n    },\n    {\n      label: __('Delete'),\n      onClick: () => deleteValues(selections, unselectAll),\n    },\n  ]\n  return actions\n}\n\nonMounted(() => {\n  if (!list.value?.data) return\n  setupListActions(list.value.data, {\n    list: list.value,\n    call,\n    createToast,\n    $dialog,\n    router,\n  })\n  // customBulkActions.value = list.value?.data?.bulkActions || []\n  customListActions.value = list.value?.data?.listActions || []\n})\n\ndefineExpose({\n  customListActions,\n})\n</script>\n","<template>\n  <LayoutHeader>\n    <template #left-header>\n      <Breadcrumbs :items=\"breadcrumbs\" />\n    </template>\n    <template #right-header>\n      <CustomActions\n        v-if=\"emailTemplatesListView?.customListActions\"\n        :actions=\"emailTemplatesListView.customListActions\"\n      />\n      <Button\n        variant=\"solid\"\n        :label=\"__('Create')\"\n        @click=\"showEmailTemplateModal = true\"\n      >\n        <template #prefix><FeatherIcon name=\"plus\" class=\"h-4\" /></template>\n      </Button>\n    </template>\n  </LayoutHeader>\n  <ViewControls\n    ref=\"viewControls\"\n    v-model=\"emailTemplates\"\n    v-model:loadMore=\"loadMore\"\n    v-model:resizeColumn=\"triggerResize\"\n    v-model:updatedPageCount=\"updatedPageCount\"\n    doctype=\"Email Template\"\n  />\n  <EmailTemplatesListView\n    ref=\"emailTemplatesListView\"\n    v-if=\"emailTemplates.data && rows.length\"\n    v-model=\"emailTemplates.data.page_length_count\"\n    v-model:list=\"emailTemplates\"\n    :rows=\"rows\"\n    :columns=\"emailTemplates.data.columns\"\n    :options=\"{\n      showTooltip: false,\n      resizeColumn: true,\n      rowCount: emailTemplates.data.row_count,\n      totalCount: emailTemplates.data.total_count,\n    }\"\n    @loadMore=\"() => loadMore++\"\n    @columnWidthUpdated=\"() => triggerResize++\"\n    @updatePageCount=\"(count) => (updatedPageCount = count)\"\n    @showEmailTemplate=\"showEmailTemplate\"\n    @applyFilter=\"(data) => viewControls.applyFilter(data)\"\n  />\n  <div\n    v-else-if=\"emailTemplates.data\"\n    class=\"flex h-full items-center justify-center\"\n  >\n    <div\n      class=\"flex flex-col items-center gap-3 text-xl font-medium text-gray-500\"\n    >\n      <EmailIcon class=\"h-10 w-10\" />\n      <span>{{ __('No {0} Found', [__('Email Templates')]) }}</span>\n      <Button :label=\"__('Create')\" @click=\"showEmailTemplateModal = true\">\n        <template #prefix><FeatherIcon name=\"plus\" class=\"h-4\" /></template>\n      </Button>\n    </div>\n  </div>\n  <EmailTemplateModal\n    v-model=\"showEmailTemplateModal\"\n    v-model:reloadEmailTemplates=\"emailTemplates\"\n    :emailTemplate=\"emailTemplate\"\n  />\n</template>\n\n<script setup>\nimport CustomActions from '@/components/CustomActions.vue'\nimport EmailIcon from '@/components/Icons/EmailIcon.vue'\nimport LayoutHeader from '@/components/LayoutHeader.vue'\nimport ViewControls from '@/components/ViewControls.vue'\nimport EmailTemplatesListView from '@/components/ListViews/EmailTemplatesListView.vue'\nimport EmailTemplateModal from '@/components/Modals/EmailTemplateModal.vue'\nimport { dateFormat, dateTooltipFormat, timeAgo } from '@/utils'\nimport { Breadcrumbs } from 'frappe-ui'\nimport { computed, ref } from 'vue'\n\nconst breadcrumbs = [\n  { label: __('Email Templates'), route: { name: 'Email Templates' } },\n]\n\nconst emailTemplatesListView = ref(null)\n\n// emailTemplates data is loaded in the ViewControls component\nconst emailTemplates = ref({})\nconst loadMore = ref(1)\nconst triggerResize = ref(1)\nconst updatedPageCount = ref(20)\nconst viewControls = ref(null)\n\nconst rows = computed(() => {\n  if (!emailTemplates.value?.data?.data) return []\n  return emailTemplates.value?.data.data.map((emailTemplate) => {\n    let _rows = {}\n    emailTemplates.value?.data.rows.forEach((row) => {\n      _rows[row] = emailTemplate[row]\n\n      if (['modified', 'creation'].includes(row)) {\n        _rows[row] = {\n          label: dateFormat(emailTemplate[row], dateTooltipFormat),\n          timeAgo: timeAgo(emailTemplate[row]),\n        }\n      }\n    })\n    return _rows\n  })\n})\n\nconst showEmailTemplateModal = ref(false)\n\nconst emailTemplate = ref({\n  subject: '',\n  response: '',\n  name: '',\n  enabled: 1,\n  owner: '',\n  reference_doctype: 'CRM Deal',\n})\n\nfunction showEmailTemplate(name) {\n  let et = rows.value?.find((row) => row.name === name)\n  emailTemplate.value = {\n    subject: et.subject,\n    response: et.response,\n    name: et.name,\n    enabled: et.enabled,\n    owner: et.owner,\n    reference_doctype: et.reference_doctype,\n  }\n  showEmailTemplateModal.value = true\n}\n</script>\n"],"names":["emit","__emit","pageLengthCount","_useModel","__props","list","router","useRouter","$dialog","globalStore","watch","val","old_value","showEditModal","ref","selectedValues","unselectAllAction","editValues","selections","unselectAll","deleteValues","close","call","createToast","customListActions","bulkActions","onMounted","_a","setupListActions","_c","_b","__expose","breadcrumbs","emailTemplatesListView","emailTemplates","loadMore","triggerResize","updatedPageCount","viewControls","rows","computed","emailTemplate","_rows","row","dateFormat","dateTooltipFormat","timeAgo","showEmailTemplateModal","showEmailTemplate","name","et"],"mappings":"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"}