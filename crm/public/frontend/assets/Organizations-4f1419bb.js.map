{"version":3,"file":"Organizations-4f1419bb.js","sources":["../../../../frontend/src/components/ListViews/OrganizationsListView.vue","../../../../frontend/src/pages/Organizations.vue"],"sourcesContent":["<template>\n  <ListView\n    :columns=\"columns\"\n    :rows=\"rows\"\n    :options=\"{\n      getRowRoute: (row) => ({\n        name: 'Organization',\n        params: { organizationId: row.name },\n      }),\n      selectable: options.selectable,\n      showTooltip: options.showTooltip,\n      resizeColumn: options.resizeColumn,\n    }\"\n    row-key=\"name\"\n    @update:selections=\"(evt) => onRowSelect(evt)\"\n  >\n    <ListHeader class=\"mx-5\" @columnWidthUpdated=\"emit('columnWidthUpdated')\" />\n    <ListRows id=\"list-rows\">\n      <ListRow\n        class=\"mx-5\"\n        v-for=\"row in rows\"\n        :key=\"row.name\"\n        v-slot=\"{ idx, column, item }\"\n        :row=\"row\"\n      >\n        <ListRowItem :item=\"item\">\n          <template #prefix>\n            <div v-if=\"column.key === 'organization_name'\">\n              <Avatar\n                v-if=\"item.label\"\n                class=\"flex items-center\"\n                :image=\"item.logo\"\n                :label=\"item.label\"\n                size=\"sm\"\n              />\n            </div>\n          </template>\n          <template #default=\"{ label }\">\n            <div\n              v-if=\"['modified', 'creation'].includes(column.key)\"\n              class=\"truncate text-base\"\n              @click=\"\n                (event) => emit('applyFilter', { event, idx, column, item })\n              \"\n            >\n              <Tooltip :text=\"item.label\">\n                <div>{{ item.timeAgo }}</div>\n              </Tooltip>\n            </div>\n            <div v-else-if=\"column.type === 'Check'\">\n              <FormControl\n                type=\"checkbox\"\n                :modelValue=\"item\"\n                :disabled=\"true\"\n                class=\"text-gray-900\"\n              />\n            </div>\n            <div v-else-if=\"['modified_by', 'owner'].includes(column.key)\">\n              <div>{{getUser(item).first_name}}</div>\n            </div>\n            <div\n              v-else\n              class=\"truncate text-base\"\n              @click=\"\n                (event) => emit('applyFilter', { event, idx, column, item })\n              \"\n            >\n            {{ __(label) }}\n            </div>\n          </template>\n        </ListRowItem>\n      </ListRow>\n    </ListRows>\n    <ListSelectBanner>\n      <template #actions=\"{ selections, unselectAll }\">\n        <Dropdown :options=\"bulkActions(selections, unselectAll)\">\n          <Button icon=\"more-horizontal\" variant=\"ghost\" />\n        </Dropdown>\n      </template>\n    </ListSelectBanner>\n  </ListView>\n  <ListFooter\n    class=\"border-t px-5 py-2\"\n    v-model=\"pageLengthCount\"\n    :options=\"{\n      rowCount: options.rowCount,\n      totalCount: options.totalCount,\n    }\"\n    @loadMore=\"emit('loadMore')\"\n  />\n  <EditValueModal\n    v-model=\"showEditModal\"\n    v-model:unselectAll=\"unselectAllAction\"\n    doctype=\"CRM Organization\"\n    :selectedValues=\"selectedValues\"\n    @reload=\"list.reload()\"\n  />\n</template>\n<script setup>\nimport EditValueModal from '@/components/Modals/EditValueModal.vue'\nimport { globalStore } from '@/stores/global'\nimport { setupListActions, createToast } from '@/utils'\nimport {\n  Avatar,\n  ListView,\n  ListHeader,\n  ListRows,\n  ListRow,\n  ListSelectBanner,\n  ListRowItem,\n  ListFooter,\n  Tooltip,\n  Dropdown,\n  call,\n} from 'frappe-ui'\nimport { ref, watch, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { usersStore } from '@/stores/users'\n\nconst props = defineProps({\n  rows: {\n    type: Array,\n    required: true,\n  },\n  columns: {\n    type: Array,\n    required: true,\n  },\n  options: {\n    type: Object,\n    default: () => ({\n      selectable: true,\n      showTooltip: true,\n      resizeColumn: false,\n      totalCount: 0,\n      rowCount: 0,\n    }),\n  },\n})\n\nconst emit = defineEmits([\n  'loadMore',\n  'updatePageCount',\n  'columnWidthUpdated',\n  'applyFilter',\n  'update:selections'\n])\nconst { getUser } = usersStore()\nconst pageLengthCount = defineModel()\nconst list = defineModel('list')\n\nconst router = useRouter()\n\nconst { $dialog } = globalStore()\n\nwatch(pageLengthCount, (val, old_value) => {\n  if (val === old_value) return\n  emit('updatePageCount', val)\n})\n\nconst showEditModal = ref(false)\nconst selectedValues = ref([])\nconst unselectAllAction = ref(() => {})\n\nfunction editValues(selections, unselectAll) {\n  selectedValues.value = selections\n  showEditModal.value = true\n  unselectAllAction.value = unselectAll\n}\n\nfunction deleteValues(selections, unselectAll) {\n  $dialog({\n    title: __('Delete'),\n    message: __('Are you sure you want to delete {0} item(s)?', [\n      selections.size,\n    ]),\n    variant: 'danger',\n    actions: [\n      {\n        label: __('Delete'),\n        variant: 'solid',\n        theme: 'red',\n        onClick: (close) => {\n          call('frappe.desk.reportview.delete_items', {\n            items: JSON.stringify(Array.from(selections)),\n            doctype: 'CRM Organization',\n          }).then(() => {\n            createToast({\n              title: __('Deleted successfully'),\n              icon: 'check',\n              iconClasses: 'text-green-600',\n            })\n            unselectAll()\n            list.value.reload()\n            close()\n          })\n        },\n      },\n    ],\n  })\n}\n\nconst customListActions = ref([])\n\nfunction bulkActions(selections, unselectAll) {\n  let actions = [\n    {\n      label: __('Edit'),\n      onClick: () => editValues(selections, unselectAll),\n    },\n    {\n      label: __('Delete'),\n      onClick: () => deleteValues(selections, unselectAll),\n    },\n  ]\n  return actions\n}\n\nfunction onRowSelect(evt){\n  let rowSelect = []\n  evt.forEach(item => {\n    rowSelect.push(item)\n  })\n  emit('update:selections', rowSelect)\n}\n\nonMounted(() => {\n  if (!list.value?.data) return\n  setupListActions(list.value.data, {\n    list: list.value,\n    call,\n    createToast,\n    $dialog,\n    router,\n  })\n  // customBulkActions.value = list.value?.data?.bulkActions || []\n  customListActions.value = list.value?.data?.listActions || []\n})\n\ndefineExpose({\n  customListActions,\n})\n</script>\n","<template>\n  <LayoutHeader>\n    <template #left-header>\n      <Breadcrumbs :items=\"breadcrumbs\" />\n    </template>\n    <template #right-header>\n      <CustomActions\n        v-if=\"organizationsListView?.customListActions\"\n        :actions=\"organizationsListView.customListActions\"\n      />\n      <Button\n        variant=\"solid\"\n        :label=\"__('Create')\"\n        @click=\"showOrganizationModal = true\"\n      >\n        <template #prefix><FeatherIcon name=\"plus\" class=\"h-4\" /></template>\n      </Button>\n    </template>\n  </LayoutHeader>\n  <ViewControls\n    ref=\"viewControls\"\n    v-model=\"organizations\"\n    v-model:loadMore=\"loadMore\"\n    v-model:resizeColumn=\"triggerResize\"\n    v-model:updatedPageCount=\"updatedPageCount\"\n    doctype=\"CRM Organization\"\n    :showElement=true\n    :placeholderText=\"__('Search organization')\"\n    :docSelect=\"organizationSelect\"\n  />\n  <OrganizationsListView\n    ref=\"organizationsListView\"\n    v-if=\"organizations.data && rows.length\"\n    v-model=\"organizations.data.page_length_count\"\n    v-model:list=\"organizations\"\n    :rows=\"rows\"\n    :columns=\"organizations.data.columns\"\n    :options=\"{\n      showTooltip: false,\n      resizeColumn: true,\n      rowCount: organizations.data.row_count,\n      totalCount: organizations.data.total_count,\n    }\"\n    @loadMore=\"() => loadMore++\"\n    @columnWidthUpdated=\"() => triggerResize++\"\n    @updatePageCount=\"(count) => (updatedPageCount = count)\"\n    @applyFilter=\"(data) => viewControls.applyFilter(data)\"\n    @update:selections=\"(selections) => onUpdateSelection(selections)\"\n  />\n  <div\n    v-else-if=\"organizations.data\"\n    class=\"flex h-full items-center justify-center\"\n  >\n    <div\n      class=\"flex flex-col items-center gap-3 text-xl font-medium text-gray-500\"\n    >\n      <OrganizationsIcon class=\"h-10 w-10\" />\n      <span>{{ __('No {0} Found', [__('organizations')]) }}</span>\n      <Button :label=\"__('Create')\" @click=\"showOrganizationModal = true\">\n        <template #prefix><FeatherIcon name=\"plus\" class=\"h-4\" /></template>\n      </Button>\n    </div>\n  </div>\n  <OrganizationModal v-model=\"showOrganizationModal\" />\n</template>\n<script setup>\nimport CustomActions from '@/components/CustomActions.vue'\nimport OrganizationsIcon from '@/components/Icons/OrganizationsIcon.vue'\nimport LayoutHeader from '@/components/LayoutHeader.vue'\nimport OrganizationModal from '@/components/Modals/OrganizationModal.vue'\nimport OrganizationsListView from '@/components/ListViews/OrganizationsListView.vue'\nimport ViewControls from '@/components/ViewControls.vue'\nimport { Breadcrumbs } from 'frappe-ui'\nimport {\n  dateFormat,\n  dateTooltipFormat,\n  timeAgo,\n  formatNumberIntoCurrency,\n} from '@/utils'\nimport { ref, computed } from 'vue'\nimport { useRoute } from 'vue-router'\n\nconst route = useRoute()\n\nconst organizationsListView = ref(null)\nconst showOrganizationModal = ref(false)\nconst organizationSelect = ref([])\n\nconst currentOrganization = computed(() => {\n  return organizations.value?.data?.data?.find(\n    (organization) => organization.name === route.params.organizationId\n  )\n})\n\nconst breadcrumbs = computed(() => {\n  let items = [{ label: __('Organizations'), route: { name: 'Organizations' } }]\n  if (!currentOrganization.value) return items\n  items.push({\n    label: __(currentOrganization.value.name),\n    route: {\n      name: 'Organization',\n      params: { organizationId: currentOrganization.value.name },\n    },\n  })\n  return items\n})\n\n// organizations data is loaded in the ViewControls component\nconst organizations = ref({})\nconst loadMore = ref(1)\nconst triggerResize = ref(1)\nconst updatedPageCount = ref(20)\nconst viewControls = ref(null)\n\nconst rows = computed(() => {\n  if (!organizations.value?.data?.data) return []\n  return organizations.value?.data.data.map((organization) => {\n    let _rows = {}\n    organizations.value?.data.rows.forEach((row) => {\n      _rows[row] = organization[row]\n\n      if (row === 'organization_name') {\n        _rows[row] = {\n          label: organization.organization_name,\n          logo: organization.organization_logo,\n        }\n      } else if (row === 'website') {\n        _rows[row] = website(organization.website)\n      } else if (row === 'annual_revenue') {\n        _rows[row] = formatNumberIntoCurrency(organization.annual_revenue)\n      } else if (['modified', 'creation'].includes(row)) {\n        _rows[row] = {\n          label: dateFormat(organization[row], dateTooltipFormat),\n          timeAgo: __(timeAgo(organization[row])),\n        }\n      }\n    })\n    return _rows\n  })\n})\n\nfunction website(url) {\n  return url && url.replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, '')\n}\nfunction onUpdateSelection(selections){\n  organizationSelect.value = selections\n}\n</script>\n"],"names":["emit","__emit","getUser","usersStore","pageLengthCount","_useModel","__props","list","router","useRouter","$dialog","globalStore","watch","val","old_value","showEditModal","ref","selectedValues","unselectAllAction","editValues","selections","unselectAll","deleteValues","close","call","createToast","customListActions","bulkActions","onRowSelect","evt","rowSelect","item","onMounted","_a","setupListActions","_c","_b","__expose","route","useRoute","organizationsListView","showOrganizationModal","organizationSelect","currentOrganization","computed","organizations","organization","breadcrumbs","items","loadMore","triggerResize","updatedPageCount","viewControls","rows","_rows","row","website","formatNumberIntoCurrency","dateFormat","dateTooltipFormat","timeAgo","url","onUpdateSelection"],"mappings":"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"}