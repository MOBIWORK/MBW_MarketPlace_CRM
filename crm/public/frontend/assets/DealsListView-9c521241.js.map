{"version":3,"file":"DealsListView-9c521241.js","sources":["../../../../frontend/src/components/ListViews/DealsListView.vue"],"sourcesContent":["<template>\n  <ListView\n    :class=\"$attrs.class\"\n    :columns=\"columns\"\n    :rows=\"rows\"\n    :options=\"{\n      getRowRoute: (row) => ({ name: 'Deal', params: { dealId: row.name } }),\n      selectable: options.selectable,\n      showTooltip: options.showTooltip,\n      resizeColumn: options.resizeColumn,\n    }\"\n    row-key=\"name\"\n  >\n    <ListHeader class=\"mx-5\" @columnWidthUpdated=\"emit('columnWidthUpdated')\" />\n    <ListRows id=\"list-rows\">\n      <ListRow\n        class=\"mx-5\"\n        v-for=\"row in rows\"\n        :key=\"row.name\"\n        v-slot=\"{ idx, column, item }\"\n        :row=\"row\"\n      >\n        <div v-if=\"column.key === '_assign'\" class=\"flex items-center\">\n          <MultipleAvatar\n            :avatars=\"item\"\n            size=\"sm\"\n            @click=\"\n                (event) => apllyFilterFromCell(event, idx, column, item)\n              \"\n          />\n        </div>\n        <ListRowItem v-else :item=\"item\">\n          <template #prefix>\n            <div v-if=\"column.key === 'status'\" @click=\"\n                (event) => apllyFilterFromCell(event, idx, column, item)\n              \">\n              <IndicatorIcon :class=\"item.color\" />\n            </div>\n            <div v-else-if=\"column.key === 'organization'\" @click=\"\n                (event) => apllyFilterFromCell(event, idx, column, item)\n              \">\n              <Avatar\n                v-if=\"item.label\"\n                class=\"flex items-center\"\n                :image=\"item.logo\"\n                :label=\"item.label\"\n                size=\"sm\"\n              />\n            </div>\n            <div v-else-if=\"column.key === 'deal_owner'\" @click=\"\n                (event) => apllyFilterFromCell(event, idx, column, item)\n              \">\n              <Avatar\n                v-if=\"item.full_name\"\n                class=\"flex items-center\"\n                :image=\"item.user_image\"\n                :label=\"item.full_name\"\n                size=\"sm\"\n              />\n            </div>\n            <div v-else-if=\"column.key === 'mobile_no'\" @click=\"\n                (event) => apllyFilterFromCell(event, idx, column, item)\n              \">\n              <PhoneIcon class=\"h-4 w-4\" />\n            </div>\n          </template>\n          <template #default=\"{ label }\">\n            <div\n              v-if=\"\n                [\n                  'modified',\n                  'creation',\n                  'first_response_time',\n                  'first_responded_on',\n                  'response_by',\n                ].includes(column.key)\n              \"\n              class=\"truncate text-base\"\n              @click=\"\n                (event) => apllyFilterFromCell(event, idx, column, item)\n              \"\n            >\n              <Tooltip :text=\"item.label\">\n                <div>{{ item.timeAgo }}</div>\n              </Tooltip>\n            </div>\n            <div\n              v-else-if=\"column.key === 'sla_status'\"\n              class=\"truncate text-base\"\n            >\n              <Badge\n                v-if=\"item.value\"\n                :variant=\"'subtle'\"\n                :theme=\"item.color\"\n                size=\"md\"\n                :label=\"item.value\"\n                @click=\"\n                  (event) => apllyFilterFromCell(event, idx, column, item)\n                \"\n              />\n            </div>\n            <div v-else-if=\"column.type === 'Check'\">\n              <FormControl\n                type=\"checkbox\"\n                :modelValue=\"item\"\n                :disabled=\"true\"\n                class=\"text-gray-900\"\n              />\n            </div>\n            <div\n              v-else\n              class=\"truncate text-base\"\n              @click=\"\n                (event) => apllyFilterFromCell(event, idx, column, item)\n              \"\n            >\n            {{ __(label) }}\n            </div>\n          </template>\n        </ListRowItem>\n      </ListRow>\n    </ListRows>\n    <ListSelectBanner>\n      <template #actions=\"{ selections, unselectAll }\">\n        <Dropdown :options=\"bulkActions(selections, unselectAll)\">\n          <Button icon=\"more-horizontal\" variant=\"ghost\" />\n        </Dropdown>\n      </template>\n    </ListSelectBanner>\n  </ListView>\n  <ListFooter\n    v-if=\"pageLengthCount\"\n    class=\"border-t px-5 py-2\"\n    v-model=\"pageLengthCount\"\n    :options=\"{\n      rowCount: options.rowCount,\n      totalCount: options.totalCount,\n    }\"\n    @loadMore=\"emit('loadMore')\"\n  />\n  <EditValueModal\n    v-model=\"showEditModal\"\n    v-model:unselectAll=\"unselectAllAction\"\n    doctype=\"CRM Deal\"\n    :selectedValues=\"selectedValues\"\n    @reload=\"list.reload()\"\n  />\n</template>\n\n<script setup>\nimport MultipleAvatar from '@/components/MultipleAvatar.vue'\nimport IndicatorIcon from '@/components/Icons/IndicatorIcon.vue'\nimport PhoneIcon from '@/components/Icons/PhoneIcon.vue'\nimport EditValueModal from '@/components/Modals/EditValueModal.vue'\nimport {\n  Avatar,\n  ListView,\n  ListHeader,\n  ListRows,\n  ListRow,\n  ListRowItem,\n  ListSelectBanner,\n  ListFooter,\n  Dropdown,\n  call,\n  Tooltip,\n} from 'frappe-ui'\nimport { setupListActions, createToast } from '@/utils'\nimport { globalStore } from '@/stores/global'\nimport { onMounted, ref, watch } from 'vue'\nimport { useRouter } from 'vue-router'\n\nconst props = defineProps({\n  rows: {\n    type: Array,\n    required: true,\n  },\n  columns: {\n    type: Array,\n    required: true,\n  },\n  options: {\n    type: Object,\n    default: () => ({\n      selectable: true,\n      showTooltip: true,\n      resizeColumn: false,\n      totalCount: 0,\n      rowCount: 0,\n    }),\n  },\n})\n\nconst emit = defineEmits([\n  'loadMore',\n  'updatePageCount',\n  'columnWidthUpdated',\n  'applyFilter',\n])\n\nconst pageLengthCount = defineModel()\nconst list = defineModel('list')\n\nconst router = useRouter()\n\nconst { $dialog } = globalStore()\n\nwatch(pageLengthCount, (val, old_value) => {\n  if (val === old_value) return\n  emit('updatePageCount', val)\n})\n\nconst showEditModal = ref(false)\nconst selectedValues = ref([])\nconst unselectAllAction = ref(() => {})\n\nfunction apllyFilterFromCell(event, idx, column, item){\n  let arrField = [\"mobile_no\",\"email\",\"lead_name\"];\n  if(arrField.includes(column.key)) return;\n  emit('applyFilter', { event, idx, column, item });\n}\n\nfunction editValues(selections, unselectAll) {\n  selectedValues.value = selections\n  showEditModal.value = true\n  unselectAllAction.value = unselectAll\n}\n\nfunction deleteValues(selections, unselectAll) {\n  $dialog({\n    title: __('Delete'),\n    message: __('Are you sure you want to delete {0} item(s)?', [\n      selections.size,\n    ]),\n    variant: 'danger',\n    actions: [\n      {\n        label: __('Delete'),\n        variant: 'solid',\n        theme: 'red',\n        onClick: (close) => {\n          call('frappe.desk.reportview.delete_items', {\n            items: JSON.stringify(Array.from(selections)),\n            doctype: 'CRM Deal',\n          }).then(() => {\n            createToast({\n              title: __('Deleted successfully'),\n              icon: 'check',\n              iconClasses: 'text-green-600',\n            })\n            unselectAll()\n            list.value.reload()\n            close()\n          })\n        },\n      },\n    ],\n  })\n}\n\nconst customBulkActions = ref([])\nconst customListActions = ref([])\n\nfunction bulkActions(selections, unselectAll) {\n  let actions = [\n    {\n      label: __('Edit'),\n      onClick: () => editValues(selections, unselectAll),\n    },\n    {\n      label: __('Delete'),\n      onClick: () => deleteValues(selections, unselectAll),\n    },\n  ]\n  customBulkActions.value.forEach((action) => {\n    actions.push({\n      label: __(action.label),\n      onClick: () =>\n        action.onClick({\n          list: list.value,\n          selections,\n          unselectAll,\n          call,\n          createToast,\n          $dialog,\n          router,\n        }),\n    })\n  })\n  return actions\n}\n\nonMounted(() => {\n  if (!list.value?.data) return\n  setupListActions(list.value.data, {\n    list: list.value,\n    call,\n    createToast,\n    $dialog,\n    router,\n  })\n  customBulkActions.value = list.value?.data?.bulkActions || []\n  customListActions.value = list.value?.data?.listActions || []\n})\n\ndefineExpose({\n  customListActions,\n})\n</script>\n"],"names":["emit","__emit","pageLengthCount","_useModel","__props","list","router","useRouter","$dialog","globalStore","watch","val","old_value","showEditModal","ref","selectedValues","unselectAllAction","apllyFilterFromCell","event","idx","column","item","editValues","selections","unselectAll","deleteValues","close","call","createToast","customBulkActions","customListActions","bulkActions","actions","action","onMounted","_a","setupListActions","_c","_b","_e","_d","__expose"],"mappings":"2jCAiMA,MAAMA,EAAOC,EAOPC,EAAkBC,EAAWC,EAAA,YAAC,EAC9BC,EAAOF,IAAY,MAAM,EAEzBG,EAASC,EAAW,EAEpB,CAAE,QAAAC,CAAS,EAAGC,EAAa,EAEjCC,EAAMR,EAAiB,CAACS,EAAKC,IAAc,CACrCD,IAAQC,GACZZ,EAAK,kBAAmBW,CAAG,CAC7B,CAAC,EAED,MAAME,EAAgBC,EAAI,EAAK,EACzBC,EAAiBD,EAAI,EAAE,EACvBE,EAAoBF,EAAI,IAAM,EAAE,EAEtC,SAASG,EAAoBC,EAAOC,EAAKC,EAAQC,EAAK,CACrC,CAAC,YAAY,QAAQ,WAAW,EACnC,SAASD,EAAO,GAAG,GAC/BpB,EAAK,cAAe,CAAE,MAAAkB,EAAO,IAAAC,EAAK,OAAAC,EAAQ,KAAAC,CAAI,CAAE,CAClD,CAEA,SAASC,EAAWC,EAAYC,EAAa,CAC3CT,EAAe,MAAQQ,EACvBV,EAAc,MAAQ,GACtBG,EAAkB,MAAQQ,CAC5B,CAEA,SAASC,EAAaF,EAAYC,EAAa,CAC7ChB,EAAQ,CACN,MAAO,GAAG,QAAQ,EAClB,QAAS,GAAG,+CAAgD,CAC1De,EAAW,IACjB,CAAK,EACD,QAAS,SACT,QAAS,CACP,CACE,MAAO,GAAG,QAAQ,EAClB,QAAS,QACT,MAAO,MACP,QAAUG,GAAU,CAClBC,EAAK,sCAAuC,CAC1C,MAAO,KAAK,UAAU,MAAM,KAAKJ,CAAU,CAAC,EAC5C,QAAS,UACrB,CAAW,EAAE,KAAK,IAAM,CACZK,EAAY,CACV,MAAO,GAAG,sBAAsB,EAChC,KAAM,QACN,YAAa,gBAC3B,CAAa,EACDJ,EAAa,EACbnB,EAAK,MAAM,OAAQ,EACnBqB,EAAO,CACnB,CAAW,CACF,CACF,CACF,CACL,CAAG,CACH,CAEA,MAAMG,EAAoBf,EAAI,EAAE,EAC1BgB,EAAoBhB,EAAI,EAAE,EAEhC,SAASiB,EAAYR,EAAYC,EAAa,CAC5C,IAAIQ,EAAU,CACZ,CACE,MAAO,GAAG,MAAM,EAChB,QAAS,IAAMV,EAAWC,EAAYC,CAAW,CAClD,EACD,CACE,MAAO,GAAG,QAAQ,EAClB,QAAS,IAAMC,EAAaF,EAAYC,CAAW,CACpD,CACF,EACD,OAAAK,EAAkB,MAAM,QAASI,GAAW,CAC1CD,EAAQ,KAAK,CACX,MAAO,GAAGC,EAAO,KAAK,EACtB,QAAS,IACPA,EAAO,QAAQ,CACb,KAAM5B,EAAK,MACX,WAAAkB,EACA,YAAAC,EACA,KAAAG,EACA,YAAAC,EACA,QAAApB,EACA,OAAAF,CACV,CAAS,CACT,CAAK,CACL,CAAG,EACM0B,CACT,CAEA,OAAAE,EAAU,IAAM,gBACTC,EAAA9B,EAAK,QAAL,MAAA8B,EAAY,OACjBC,EAAiB/B,EAAK,MAAM,KAAM,CAChC,KAAMA,EAAK,MACX,KAAAsB,EACA,YAAAC,EACA,QAAApB,EACA,OAAAF,CACJ,CAAG,EACDuB,EAAkB,QAAQQ,GAAAC,EAAAjC,EAAK,QAAL,YAAAiC,EAAY,OAAZ,YAAAD,EAAkB,cAAe,CAAE,EAC7DP,EAAkB,QAAQS,GAAAC,EAAAnC,EAAK,QAAL,YAAAmC,EAAY,OAAZ,YAAAD,EAAkB,cAAe,CAAE,EAC/D,CAAC,EAEDE,EAAa,CACX,kBAAAX,CACF,CAAC"}