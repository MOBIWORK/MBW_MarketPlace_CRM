{"version":3,"file":"Fields-2a681c08.js","sources":["../../../../frontend/src/components/Icons/SuccessIcon.vue","../../../../frontend/src/components/DropdownItem.vue","../../../../frontend/src/components/Fields.vue"],"sourcesContent":["<template>\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M14 8C14 11.3137 11.3137 14 8 14C4.68629 14 2 11.3137 2 8C2 4.68629 4.68629 2 8 2C11.3137 2 14 4.68629 14 8ZM15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1C11.866 1 15 4.13401 15 8ZM11.2909 5.98482C11.4666 5.77175 11.4363 5.45663 11.2232 5.28096C11.0101 5.1053 10.695 5.13561 10.5193 5.34868L7.07001 9.53239L5.72845 7.79857C5.55946 7.58018 5.24543 7.54012 5.02703 7.70911C4.80863 7.8781 4.76858 8.19214 4.93756 8.41053L6.66217 10.6394C6.7552 10.7596 6.89788 10.831 7.04988 10.8334C7.20188 10.8357 7.3467 10.7688 7.4434 10.6515L11.2909 5.98482Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n</template>\n","<template>\n  <div\n    class=\"group flex w-full items-center justify-between rounded bg-transparent p-1 pl-2 text-base text-gray-800 transition-colors hover:bg-gray-200 active:bg-gray-300\"\n  >\n    <div class=\"flex items-center justify-between gap-7\">\n      <div v-show=\"!editMode\">{{ option.value }}</div>\n      <TextInput\n        ref=\"inputRef\"\n        v-show=\"editMode\"\n        v-model=\"option.value\"\n        class=\"w-full\"\n        :placeholder=\"option.placeholder\"\n        @blur.stop=\"saveOption\"\n        @keydown.enter.stop=\"(e) => e.target.blur()\"\n      />\n\n      <div class=\"actions flex items-center justify-center\">\n        <Tooltip text=\"Set As Primary\" v-if=\"!isNew && !option.selected\">\n          <div>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              class=\"opacity-0 hover:bg-gray-300 group-hover:opacity-100\"\n              @click=\"option.onClick\"\n            >\n              <SuccessIcon />\n            </Button>\n          </div>\n        </Tooltip>\n        <Tooltip text=\"Edit\">\n          <div>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              class=\"opacity-0 hover:bg-gray-300 group-hover:opacity-100\"\n              @click=\"toggleEditMode\"\n            >\n              <EditIcon />\n            </Button>\n          </div>\n        </Tooltip>\n        <Tooltip text=\"Delete\">\n          <div>\n            <Button\n              variant=\"ghost\"\n              icon=\"x\"\n              size=\"sm\"\n              class=\"opacity-0 hover:bg-gray-300 group-hover:opacity-100\"\n              @click=\"() => option.onDelete(option, isNew)\"\n            />\n          </div>\n        </Tooltip>\n      </div>\n    </div>\n    <div>\n      <FeatherIcon\n        v-if=\"option.selected\"\n        name=\"check\"\n        class=\"text-primary-500 h-4 w-6\"\n        size=\"sm\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport SuccessIcon from '@/components/Icons/SuccessIcon.vue'\nimport EditIcon from '@/components/Icons/EditIcon.vue'\nimport { TextInput, Tooltip } from 'frappe-ui'\nimport { nextTick, ref, onMounted } from 'vue'\n\nconst props = defineProps({\n  option: {\n    type: Object,\n    default: () => {},\n  },\n})\n\nconst editMode = ref(false)\nconst isNew = ref(false)\nconst inputRef = ref(null)\n\nonMounted(() => {\n  if (!props.option?.value) {\n    editMode.value = true\n    isNew.value = true\n    nextTick(() => inputRef.value.el.focus())\n  }\n})\n\nconst toggleEditMode = () => {\n  editMode.value = !editMode.value\n  editMode.value && nextTick(() => inputRef.value.el.focus())\n}\n\nconst saveOption = () => {\n  toggleEditMode()\n  props.option.onSave(props.option, isNew.value)\n  isNew.value = false\n}\n</script>\n","<template>\n  <div class=\"flex flex-col gap-4\">\n    <div\n      v-for=\"section in sections\"\n      :key=\"section.section\"\n      class=\"first:border-t-0 first:pt-0\"\n      :class=\"section.hideBorder ? '' : 'border-t pt-4'\"\n    >\n      <div\n        class=\"grid gap-4\"\n        :class=\"\n          section.columns ? 'grid-cols-' + section.columns : 'grid-cols-3'\n        \"\n      >\n        <div v-for=\"field in section.fields\" :key=\"field.name\">\n          \n          <div class=\"mb-2 text-sm text-gray-600\" style=\"display: flex; justify-content: space-between;\">\n            {{ __(field.label) }}\n            <span class=\"text-red-500\" v-if=\"field.mandatory\">*</span>\n            <div v-if=\"invalid[field.name]\">\n              <Tooltip\n                :text=\"invalid[field.name]\"\n                :placement=\"'top'\">\n                  <FeatherIcon  name=\"alert-triangle\" class=\"h-4 w-4 text-red-500\" />\n              </Tooltip>\n            </div>\n          </div>\n          \n         \n          \n          <FormControl\n            v-if=\"field.type === 'select'\"\n            type=\"select\"\n            class=\"form-control\"\n            :class=\"field.prefix ? 'prefix' : ''\"\n            :options=\"field.options\"\n            v-model=\"data[field.name]\"\n            :placeholder=\"__(field.placeholder)\"\n          >\n            <template v-if=\"field.prefix\" #prefix>\n              <IndicatorIcon :class=\"field.prefix\" />\n            </template>\n          </FormControl>\n          <Link\n            v-else-if=\"field.type === 'link'\"\n            class=\"form-control\"\n            :value=\"data[field.name]\"\n            :doctype=\"field.doctype\"\n            @change=\"(v) => (data[field.name] = v)\"\n            :placeholder=\"__(field.placeholder)\"\n            :onCreate=\"field.create\"\n          />\n          <Link\n            v-else-if=\"field.type === 'user'\"\n            class=\"form-control\"\n            :value=\"getUser(data[field.name]).full_name\"\n            :doctype=\"field.doctype\"\n            @change=\"(v) => (data[field.name] = v)\"\n            :placeholder=\"__(field.placeholder)\"\n            :hideMe=\"true\"\n          >\n            <template #prefix>\n              <UserAvatar class=\"mr-2\" :user=\"data[field.name]\" size=\"sm\" />\n            </template>\n            <template #item-prefix=\"{ option }\">\n              <UserAvatar class=\"mr-2\" :user=\"option.value\" size=\"sm\" />\n            </template>\n            <template #item-label=\"{ option }\">\n              <Tooltip :text=\"option.value\">\n                <div class=\"cursor-pointer\">\n                  {{ getUser(option.value).full_name }}\n                </div>\n              </Tooltip>\n            </template>\n          </Link>\n          <div v-else-if=\"field.type === 'dropdown'\">\n            <NestedPopover>\n              <template #target=\"{ open }\">\n                <Button\n                  :label=\"data[field.name]\"\n                  class=\"dropdown-button flex w-full items-center justify-between rounded border border-gray-100 bg-gray-100 px-2 py-1.5 text-base text-gray-800 placeholder-gray-500 transition-colors hover:border-gray-200 hover:bg-gray-200 focus:border-gray-500 focus:bg-white focus:shadow-sm focus:outline-none focus:ring-0 focus-visible:ring-2 focus-visible:ring-gray-400\"\n                >\n                  <div class=\"truncate\">{{ data[field.name] }}</div>\n                  <template #suffix>\n                    <FeatherIcon\n                      :name=\"open ? 'chevron-up' : 'chevron-down'\"\n                      class=\"h-4 text-gray-600\"\n                    />\n                  </template>\n                </Button>\n              </template>\n              <template #body>\n                <div\n                  class=\"my-2 space-y-1.5 divide-y rounded-lg border border-gray-100 bg-white p-1.5 shadow-xl\"\n                >\n                  <div>\n                    <DropdownItem\n                      v-if=\"field.options?.length\"\n                      v-for=\"option in field.options\"\n                      :key=\"option.name\"\n                      :option=\"option\"\n                    />\n                    <div v-else>\n                      <div class=\"p-1.5 px-7 text-base text-gray-500\">\n                        {{ __('No {0} Available', [field.label]) }}\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"pt-1.5\">\n                    <Button\n                      variant=\"ghost\"\n                      class=\"w-full !justify-start\"\n                      :label=\"__('Create New')\"\n                      @click=\"field.create()\"\n                    >\n                      <template #prefix>\n                        <FeatherIcon name=\"plus\" class=\"h-4\" />\n                      </template>\n                    </Button>\n                  </div>\n                </div>\n              </template>\n            </NestedPopover>\n          </div>\n          <div v-else-if=\"field.type === 'dropdownNote'\">\n            <NestedPopover class=\"relative w-[100px]\">\n              <template #target=\"{ open }\">\n                <Button\n                  :label=\"__('Note')\"\n                  class=\"dropdown-button flex w-full items-center justify-between rounded border border-gray-100 bg-gray-100 px-2 py-1.5 text-base text-gray-800 placeholder-gray-500 transition-colors hover:border-gray-200 hover:bg-gray-200 focus:border-gray-500 focus:bg-white focus:shadow-sm focus:outline-none focus:ring-0 focus-visible:ring-2 focus-visible:ring-gray-400\"\n                >\n                  <!-- <div style=\"width: 185px;\" class=\"truncate\">\n  <span >{{ data[field.name] }}</span>\n</div> -->\n                  <template #suffix>\n                    <FeatherIcon\n                      :name=\"open ? 'chevron-up' : 'chevron-down'\"\n                      class=\"h-4 text-gray-600\"\n                    />\n                  </template>\n                </Button>\n              </template>\n              <template #body>\n                <div\n                  class=\"my-2 space-y-1.5 divide-y rounded-lg border border-gray-100 bg-white p-1.5 shadow-xl\"\n                  style=\"position: absolute; left: 105px; top: -36px\"\n                >\n                  <div class=\"min-w-[180px]\">\n                    <TextEditor\n                      variant=\"outline\"\n                      ref=\"content\"\n                      editor-class=\"!prose-sm overflow-auto min-h-[180px]  max-h-80 py-1.5 px-2 rounded border border-gray-300 bg-white hover:border-gray-400 hover:shadow-sm focus:bg-white focus:border-gray-500 focus:shadow-sm focus:ring-0 focus-visible:ring-2 focus-visible:ring-gray-400 text-gray-800 transition-colors\"\n                      :bubbleMenu=\"true\"\n                      :value=\"data[field.name]\"\n                      :placeholder=\"__('Write Content...')\"\n                      @change=\"(v) => (data[field.name] = v)\"\n                    />\n                    <!-- Đây là text area -->\n                    <!-- <textarea v-model=\"data[field.name]\" @input=\"updateLabel($event.target.value,field.name)\" class=\"w-full h-22 border-gray-300 rounded-md p-2 focus:outline-none focus:ring-2 focus:ring-indigo-500 \"></textarea> -->\n                  </div>\n                </div>\n              </template>\n            </NestedPopover>\n          </div>\n          <FormControl\n            v-else\n            type=\"text\"\n            :placeholder=\"__(field.placeholder)\"\n            v-model=\"data[field.name]\"\n            @focus=\"handleFocus(data[field.name], field.name)\"\n            @blur=\"handleBlur(data[field.name], field.name)\"\n          />\n          <!-- <span v-if=\"error[field.name]\" class=\"error-message\">{{ error[field.name] }}</span> -->\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { TextEditor } from 'frappe-ui'\nimport NestedPopover from '@/components/NestedPopover.vue'\nimport DropdownItem from '@/components/DropdownItem.vue'\nimport IndicatorIcon from '@/components/Icons/IndicatorIcon.vue'\nimport UserAvatar from '@/components/UserAvatar.vue'\nimport Link from '@/components/Controls/Link.vue'\nimport { usersStore } from '@/stores/users'\nimport { Tooltip ,FeatherIcon} from 'frappe-ui'\nimport { reactive } from 'vue';\nconst { getUser } = usersStore();\n\nconst props = defineProps({\n  sections: Array,\n  data: Object,\n});\n\nconst error = reactive({}); // object to store validation errors\n\nconst invalid = reactive({});\n\nconst handleFocus = (value, fieldName) => {\n  // Clear error message when the field is focused\n  \n};\n\nconst handleBlur = (value, fieldName) => {\n  // Perform validation based on your requirements\n  // For example, check if the value is empty\n  const emailRegex = /^[\\w-]+(?:\\.[\\w-]+)*@(?:[\\w-]+\\.)+[a-zA-Z]{2,}$/;\n  const phoneRegex = /^(\\+84|0)\\d{9}$/;\n  if(value != \"\"){\n    if(fieldName == 'email' || fieldName == 'email_id'){\n      if(!emailRegex.test(value)){\n        invalid[fieldName] = __('Invalid Email');\n      }else{\n        delete invalid[fieldName];\n      }\n    }\n    if(fieldName == 'mobile_no' || fieldName == 'actual_mobile_no'){\n      if(!phoneRegex.test(value)){\n        invalid[fieldName] = __('Invalid phone number');\n      }else{\n        delete invalid[fieldName];\n      }\n      const cleanedValue = value.replace(/\\s+/g, '').replace(/^(\\+?84|0)/, '0');\n      props.data[fieldName] = cleanedValue\n    }\n  }else{\n    if(fieldName == 'email' || fieldName == 'email_id') delete invalid[fieldName];\n    if(fieldName == 'mobile_no' || fieldName == 'actual_mobile_no') delete invalid[fieldName];\n  }\n};\n</script>\n\n<style scoped>\n:deep(.form-control.prefix select) {\n  padding-left: 2rem;\n}\n.error-message {\n  color: red;\n  font-size: 0.8rem;\n}\n</style>\n"],"names":["_hoisted_1","_hoisted_2","_createElementVNode","_hoisted_3","_cache","props","__props","editMode","ref","isNew","inputRef","onMounted","_a","nextTick","toggleEditMode","saveOption","getUser","usersStore","reactive","invalid","handleFocus","value","fieldName","handleBlur","emailRegex","phoneRegex","cleanedValue"],"mappings":"2YAEIA,EAAU,CACV,WACA,YACA,QAAW,YACX,gDAGEC,EAAmBC,EAAA,OAAA,CACnB,YAAU,UACV,YAAkkB,UAClkB,EAAA,+lBACAC,EAAA,iBACEC,EAAA,0ZCyDR,MAAMC,EAAQC,EAORC,EAAWC,EAAI,EAAK,EACpBC,EAAQD,EAAI,EAAK,EACjBE,EAAWF,EAAI,IAAI,EAEzBG,EAAU,IAAM,QACTC,EAAAP,EAAM,SAAN,MAAAO,EAAc,QACjBL,EAAS,MAAQ,GACjBE,EAAM,MAAQ,GACdI,EAAS,IAAMH,EAAS,MAAM,GAAG,MAAK,CAAE,EAE5C,CAAC,EAED,MAAMI,EAAiB,IAAM,CAC3BP,EAAS,MAAQ,CAACA,EAAS,MAC3BA,EAAS,OAASM,EAAS,IAAMH,EAAS,MAAM,GAAG,OAAO,CAC5D,EAEMK,EAAa,IAAM,CACvBD,EAAgB,EAChBT,EAAM,OAAO,OAAOA,EAAM,OAAQI,EAAM,KAAK,EAC7CA,EAAM,MAAQ,EAChB,q6DC0FA,KAAM,CAAE,QAAAO,CAAO,EAAKC,IAEdZ,EAAQC,EAKAY,EAAS,EAAE,EAEzB,MAAMC,EAAUD,EAAS,CAAA,CAAE,EAErBE,EAAc,CAACC,EAAOC,IAAc,CAG1C,EAEMC,EAAa,CAACF,EAAOC,IAAc,CAGvC,MAAME,EAAa,kDACbC,EAAa,kBACnB,GAAGJ,GAAS,IAQV,IAPGC,GAAa,SAAWA,GAAa,cAClCE,EAAW,KAAKH,CAAK,EAGvB,OAAOF,EAAQG,CAAS,EAFxBH,EAAQG,CAAS,EAAI,GAAG,eAAe,GAKxCA,GAAa,aAAeA,GAAa,mBAAmB,CACzDG,EAAW,KAAKJ,CAAK,EAGvB,OAAOF,EAAQG,CAAS,EAFxBH,EAAQG,CAAS,EAAI,GAAG,sBAAsB,EAIhD,MAAMI,EAAeL,EAAM,QAAQ,OAAQ,EAAE,EAAE,QAAQ,aAAc,GAAG,EACxEhB,EAAM,KAAKiB,CAAS,EAAII,CACzB,OAEEJ,GAAa,SAAWA,GAAa,aAAY,OAAOH,EAAQG,CAAS,GACzEA,GAAa,aAAeA,GAAa,qBAAoB,OAAOH,EAAQG,CAAS,CAE5F"}