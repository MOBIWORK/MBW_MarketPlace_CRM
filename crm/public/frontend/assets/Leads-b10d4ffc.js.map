{"version":3,"file":"Leads-b10d4ffc.js","sources":["../../../../frontend/src/components/ListViews/LeadsListView.vue","../../../../frontend/src/components/Modals/LeadModal.vue","../../../../frontend/src/components/Modals/ImportModal.vue","../../../../frontend/src/pages/Leads.vue"],"sourcesContent":["<template>\n  <ListView\n    :class=\"$attrs.class\"\n    :columns=\"columns\"\n    :rows=\"rows\"\n    :options=\"{\n      getRowRoute: (row) => ({ name: 'Lead', params: { leadId: row.name } }),\n      selectable: options.selectable,\n      showTooltip: options.showTooltip,\n      resizeColumn: options.resizeColumn,\n    }\"\n    row-key=\"name\"\n  >\n    <ListHeader class=\"mx-5\" @columnWidthUpdated=\"emit('columnWidthUpdated')\" />\n    <ListRows id=\"list-rows\">\n      <ListRow\n        class=\"mx-5\"\n        v-for=\"row in rows\"\n        :key=\"row.name\"\n        v-slot=\"{ idx, column, item }\"\n        :row=\"row\"\n      >\n        <div v-if=\"column.key === '_assign'\" class=\"flex items-center\">\n          <MultipleAvatar\n            :avatars=\"item\"\n            size=\"sm\"\n            @click=\"\n              (event) => emit('applyFilter', { event, idx, column, item })\n            \"\n          />\n        </div>\n        <ListRowItem v-else :item=\"item\">\n          <template #prefix>\n            <div v-if=\"column.key === 'status'\">\n              <IndicatorIcon :class=\"item.color\" />\n            </div>\n            <div v-else-if=\"column.key === 'lead_name'\">\n              <Avatar\n                v-if=\"item.label\"\n                class=\"flex items-center\"\n                :image=\"item.image\"\n                :label=\"item.image_label\"\n                size=\"sm\"\n              />\n            </div>\n            <div v-else-if=\"column.key === 'organization'\">\n              <Avatar\n                v-if=\"item.label\"\n                class=\"flex items-center\"\n                :image=\"item.logo\"\n                :label=\"item.label\"\n                size=\"sm\"\n              />\n            </div>\n            <div v-else-if=\"column.key === 'lead_owner'\">\n              <Avatar\n                v-if=\"item.full_name\"\n                class=\"flex items-center\"\n                :image=\"item.user_image\"\n                :label=\"item.full_name\"\n                size=\"sm\"\n              />\n            </div>\n            <div v-else-if=\"column.key === 'mobile_no'\">\n              <PhoneIcon class=\"h-4 w-4\" />\n            </div>\n          </template>\n          <template #default=\"{ label }\">\n            <div\n              v-if=\"\n                [\n                  'modified',\n                  'creation',\n                  'first_response_time',\n                  'first_responded_on',\n                  'response_by',\n                ].includes(column.key)\n              \"\n              class=\"truncate text-base\"\n              @click=\"\n                (event) => emit('applyFilter', { event, idx, column, item })\n              \"\n            >\n              <Tooltip :text=\"item.label\">\n                <div>{{ item.timeAgo }}</div>\n              </Tooltip>\n            </div>\n            <div\n              v-else-if=\"column.key === 'sla_status'\"\n              class=\"truncate text-base\"\n            >\n              <Badge\n                v-if=\"item.value\"\n                :variant=\"'subtle'\"\n                :theme=\"item.color\"\n                size=\"md\"\n                :label=\"item.value\"\n                @click=\"\n                  (event) => emit('applyFilter', { event, idx, column, item })\n                \"\n              />\n            </div>\n            <div v-else-if=\"column.type === 'Check'\">\n              <FormControl\n                type=\"checkbox\"\n                :modelValue=\"item\"\n                :disabled=\"true\"\n                class=\"text-gray-900\"\n              />\n            </div>\n            <div\n              v-else\n              class=\"truncate text-base\"\n              @click=\"\n                (event) => emit('applyFilter', { event, idx, column, item })\n              \"\n            >\n            {{ __(label) }}\n            </div>\n          </template>\n        </ListRowItem>\n      </ListRow>\n    </ListRows>\n    <ListSelectBanner>\n      <template #actions=\"{ selections, unselectAll }\">\n        <Dropdown :options=\"bulkActions(selections, unselectAll)\">\n          <Button icon=\"more-horizontal\" variant=\"ghost\" />\n        </Dropdown>\n      </template>\n    </ListSelectBanner>\n  </ListView>\n  <ListFooter\n    v-if=\"pageLengthCount\"\n    class=\"border-t px-5 py-2\"\n    v-model=\"pageLengthCount\"\n    :options=\"{\n      rowCount: options.rowCount,\n      totalCount: options.totalCount,\n    }\"\n    @loadMore=\"emit('loadMore')\"\n  />\n  <EditValueModal\n    v-model=\"showEditModal\"\n    v-model:unselectAll=\"unselectAllAction\"\n    doctype=\"CRM Lead\"\n    :selectedValues=\"selectedValues\"\n    @reload=\"list.reload()\"\n  />\n</template>\n\n<script setup>\nimport IndicatorIcon from '@/components/Icons/IndicatorIcon.vue'\nimport PhoneIcon from '@/components/Icons/PhoneIcon.vue'\nimport MultipleAvatar from '@/components/MultipleAvatar.vue'\nimport EditValueModal from '@/components/Modals/EditValueModal.vue'\nimport {\n  Avatar,\n  ListView,\n  ListHeader,\n  ListRows,\n  ListRow,\n  ListSelectBanner,\n  ListRowItem,\n  ListFooter,\n  Dropdown,\n  call,\n  Tooltip,\n} from 'frappe-ui'\nimport { setupListActions, createToast } from '@/utils'\nimport { globalStore } from '@/stores/global'\nimport { onMounted, ref, watch } from 'vue'\nimport { useRouter } from 'vue-router'\n\nconst props = defineProps({\n  rows: {\n    type: Array,\n    required: true,\n  },\n  columns: {\n    type: Array,\n    required: true,\n  },\n  options: {\n    type: Object,\n    default: () => ({\n      selectable: true,\n      showTooltip: true,\n      resizeColumn: false,\n      totalCount: 0,\n      rowCount: 0,\n    }),\n  },\n})\n\nconst emit = defineEmits([\n  'loadMore',\n  'updatePageCount',\n  'columnWidthUpdated',\n  'applyFilter',\n])\n\nconst pageLengthCount = defineModel()\nconst list = defineModel('list')\n\nconst router = useRouter()\n\nconst { $dialog } = globalStore()\n\nwatch(pageLengthCount, (val, old_value) => {\n  if (val === old_value) return\n  emit('updatePageCount', val)\n})\n\nconst showEditModal = ref(false)\nconst selectedValues = ref([])\nconst unselectAllAction = ref(() => {})\n\nfunction editValues(selections, unselectAll) {\n  selectedValues.value = selections\n  showEditModal.value = true\n  unselectAllAction.value = unselectAll\n}\n\nfunction deleteValues(selections, unselectAll) {\n  $dialog({\n    title: __('Delete'),\n    message: __('Are you sure you want to delete {0} item(s)?', [\n      selections.size,\n    ]),\n    variant: 'danger',\n    actions: [\n      {\n        label: __('Delete'),\n        variant: 'solid',\n        theme: 'red',\n        onClick: (close) => {\n          call('frappe.desk.reportview.delete_items', {\n            items: JSON.stringify(Array.from(selections)),\n            doctype: 'CRM Lead',\n          }).then(() => {\n            createToast({\n              title: __('Deleted successfully'),\n              icon: 'check',\n              iconClasses: 'text-green-600',\n            })\n            unselectAll()\n            list.value.reload()\n            close()\n          })\n        },\n      },\n    ],\n  })\n}\n\nconst customBulkActions = ref([])\nconst customListActions = ref([])\n\nfunction bulkActions(selections, unselectAll) {\n  let actions = [\n    {\n      label: __('Edit'),\n      onClick: () => editValues(selections, unselectAll),\n    },\n    {\n      label: __('Delete'),\n      onClick: () => deleteValues(selections, unselectAll),\n    },\n  ]\n  customBulkActions.value.forEach((action) => {\n    actions.push({\n      label: __(action.label),\n      onClick: () =>\n        action.onClick({\n          list: list.value,\n          selections,\n          unselectAll,\n          call,\n          createToast,\n          $dialog,\n          router,\n        }),\n    })\n  })\n  return actions\n}\n\nonMounted(() => {\n  if (!list.value?.data) return\n  setupListActions(list.value.data, {\n    list: list.value,\n    call,\n    createToast,\n    $dialog,\n    router,\n  })\n  customBulkActions.value = list.value?.data?.bulkActions || []\n  customListActions.value = list.value?.data?.listActions || []\n})\n\ndefineExpose({\n  customListActions,\n})\n</script>\n","<template>\n  <Dialog\n    v-model=\"show\"\n    :options=\"{\n      size: '3xl',\n      title: __('Create Lead'),\n    }\"\n  >\n    <template #body-content>\n      <Fields :sections=\"sections\" :data=\"lead\" />\n      <ErrorMessage class=\"mt-4\" v-if=\"error\" :message=\"__(error)\" />\n    </template>\n    <template #actions>\n      <div class=\"flex flex-row-reverse gap-2\">\n        <Button\n          variant=\"solid\"\n          :label=\"__('Create')\"\n          :loading=\"isLeadCreating\"\n          @click=\"createNewLead\"\n        />\n      </div>\n    </template>\n  </Dialog>\n</template>\n\n<script setup>\nimport Fields from '@/components/Fields.vue'\nimport { usersStore } from '@/stores/users'\nimport { statusesStore } from '@/stores/statuses'\nimport { createResource , call} from 'frappe-ui'\nimport { computed, onMounted, ref, reactive } from 'vue'\nimport { useRouter } from 'vue-router'\n\nconst { getUser } = usersStore()\nconst { getLeadStatus, statusOptions } = statusesStore()\n\nconst show = defineModel()\nconst router = useRouter()\nconst error = ref(null)\nconst isLeadCreating = ref(false)\n\nconst lead = reactive({\n  salutation: '',\n  first_name: '',\n  last_name: '',\n  email: '',\n  mobile_no: '',\n  gender: '',\n  organization: '',\n  website: '',\n  no_of_employees: '',\n  territory: '',\n  annual_revenue: '',\n  industry: '',\n  status: '',\n  lead_owner: '',\n  note:''\n})\n\nconst sections = computed(() => {\n  return [\n    {\n      section: 'Contact Details',\n      fields: [\n        {\n          label: 'Salutation',\n          name: 'salutation',\n          type: 'link',\n          placeholder: __('Mr'),\n          doctype: 'Salutation',\n        },\n        {\n          label: 'First Name',\n          name: 'first_name',\n          mandatory: true,\n          type: 'data',\n          placeholder: '',\n        },\n        // {\n        //   label: 'Last Name',\n        //   name: 'last_name',\n        //   type: 'data',\n        //   placeholder: '',\n        // },\n        {\n          label: 'Email',\n          name: 'email',\n          type: 'data',\n          placeholder: __('example@gmail.com'),\n        },\n        {\n          label: 'Mobile No',\n          name: 'mobile_no',\n          type: 'data',\n          placeholder: '0876543210',\n        },\n        {\n          label: 'Gender',\n          name: 'gender',\n          type: 'link',\n          doctype: 'Gender',\n          placeholder: __('Male'),\n        },\n      ],\n    },\n    {\n      section: 'Organization Details',\n      fields: [\n        {\n          label: 'Organization',\n          name: 'organization',\n          type: 'data',\n          placeholder: __('MBW Technologies'),\n        },\n        {\n          label: 'Website',\n          name: 'website',\n          type: 'data',\n          placeholder: __('https://example.com'),\n        },\n        {\n          label: 'No of Employees',\n          name: 'no_of_employees',\n          type: 'select',\n          options: [\n            { label: __('1-10'), value: '1-10' },\n            { label: __('11-50'), value: '11-50' },\n            { label: __('51-200'), value: '51-200' },\n            { label: __('201-500'), value: '201-500' },\n            { label: __('501-1000'), value: '501-1000' },\n            { label: __('1001-5000'), value: '1001-5000' },\n            { label: __('5001-10000'), value: '5001-10000' },\n            { label: __('10001+'), value: '10001+' },\n          ],\n          placeholder: '1-10',\n        },\n        {\n          label: 'Territory',\n          name: 'territory',\n          type: 'link',\n          doctype: 'CRM Territory',\n          placeholder: __('VietNam'),\n        },\n        {\n          label: 'Annual Revenue',\n          name: 'annual_revenue',\n          type: 'data',\n          placeholder: '1000000',\n        },\n        {\n          label: 'Industry',\n          name: 'industry',\n          type: 'link',\n          doctype: 'CRM Industry',\n          placeholder: __('Technology'),\n        },\n      ],\n    },\n    {\n      section: 'Note Details',\n      columns: 3,\n      fields: [\n     \n      {\n          label: '',\n          name: 'note',\n          type: 'dropdownNote',\n          placeholder: '',\n          doctype: '',\n        },\n        \n      ]\n    },\n    {\n      section: 'Other Details',\n      columns: 2,\n      fields: [\n        {\n          label: 'Status',\n          name: 'status',\n          type: 'select',\n          options: leadStatuses.value,\n          prefix: getLeadStatus(lead.status).iconColorClass,\n        },\n        {\n          label: 'Lead Owner',\n          name: 'lead_owner',\n          type: 'user',\n          placeholder: __('Lead Owner'),\n          doctype: 'User',\n        },\n      ],\n    },\n  ]\n})\n\nconst createLead = createResource({\n  url: 'frappe.client.insert',\n  makeParams(values) {\n    return {\n      doc: {\n        doctype: 'CRM Lead',\n        ...values,\n      },\n    }\n  },\n})\n\nconst leadStatuses = computed(() => {\n  let statuses = statusOptions('lead')\n  if (!lead.status) {\n    lead.status = statuses[0].value\n  }\n  return statuses\n})\n\nasync function createNewLead() {\n  createLead.submit(lead, {\n    validate() {\n      error.value = null\n      if (!lead.first_name) {\n        error.value = __('First Name is mandatory')\n        return error.value\n      }\n      if (lead.website && !lead.website.startsWith('http')) {\n        lead.website = 'https://' + lead.website\n      }\n      if (lead.annual_revenue) {\n        lead.annual_revenue = lead.annual_revenue.replace(/,/g, '')\n        if (isNaN(lead.annual_revenue)) {\n          error.value = __('Annual Revenue should be a number')\n          return error.value\n        }\n      }\n      if (lead.mobile_no && isNaN(lead.mobile_no.replace(/[-+() ]/g, ''))) {\n        error.value = __('Mobile No should be a number')\n        return error.value\n      }\n      if (lead.email && !lead.email.includes('@')) {\n        error.value = __('Invalid Email')\n        return error.value\n      }\n      isLeadCreating.value = true\n    },\n    async onSuccess(data) {\n      isLeadCreating.value = false\n      show.value = false\n      router.push({ name: 'Lead', params: { leadId: data.name } })\n      const hasContent = /<[^>]>/g.test(lead.note);\n      if(lead.note && hasContent){\n      let d = await call('frappe.client.insert', {\n      doc: {\n        doctype: 'FCRM Note',\n        title: data.name,\n        content: lead.note,\n        reference_doctype: 'CRM Lead',\n        reference_docname:'',\n      },\n    })\n      }\n    },\n  })\n\n}\n\nonMounted(() => {\n  if (!lead.lead_owner) {\n    lead.lead_owner = getUser().email\n  }\n})\n</script>\n","<template>\n    <Dialog\n      v-model=\"show\"\n      :options=\"{\n      size: '4xl',\n      title: __('Import'),\n      \n    }\"\n    \n    >\n      <template #body-content>\n        <iframe id=\"myFrame\" style=\"width: 100%; height: 350px;\" src=\"/app/data-import/new-data-import\"></iframe>\n      </template>\n      <template #actions>\n        <div class=\"flex flex-row-reverse gap-2\">\n          <Button\n            variant=\"solid\"\n            :label=\"__('Close')\"\n            :loading=\"isDealCreating\"\n            @click=\"createDeal\"\n          />\n        </div>\n      </template>\n    </Dialog>\n  </template>\n  \n  <script setup>\n  import Fields from '@/components/Fields.vue'\n  import { usersStore } from '@/stores/users'\n  import { statusesStore } from '@/stores/statuses'\n  import { Switch, createResource } from 'frappe-ui'\n  import { computed, ref, reactive, onMounted ,nextTick} from 'vue'\n  import { useRouter } from 'vue-router'\n  \n  const { getUser } = usersStore()\n  const { getDealStatus, statusOptions } = statusesStore()\n  \n  const show = defineModel()\n  const router = useRouter()\n  const error = ref(null)\n  const isDealCreating = ref(false)\n  function createDeal() {\n    show.value = false\n  }\n  \n  onMounted(() => {\n    nextTick(() => {\n    const iframe = document.getElementById('myFrame');\n    console.log(iframe);\n  })\n})\n \n  </script>\n  <style scoped>\n \n  </style>","<template>\n  <LayoutHeader>\n    <template #left-header>\n      <Breadcrumbs :items=\"breadcrumbs\" />\n    </template>\n    <template #right-header>\n      <CustomActions\n        v-if=\"leadsListView?.customListActions\"\n        :actions=\"leadsListView.customListActions\"\n      />\n      <Button\n        variant=\"solid\"\n        :label=\"__('Create')\"\n        @click=\"showLeadModal = true\"\n      >\n        <template #prefix><FeatherIcon name=\"plus\" class=\"h-4\" /></template>\n      </Button>\n    </template>\n  </LayoutHeader>\n  <ViewControls\n    ref=\"viewControls\"\n    v-model=\"leads\"\n    v-model:loadMore=\"loadMore\"\n    v-model:resizeColumn=\"triggerResize\"\n    v-model:updatedPageCount=\"updatedPageCount\"\n    doctype=\"CRM Lead\"\n    :filters=\"{ converted: 0 }\"\n    :showElement=true\n    :showFuncImport=true\n    :showFuncConvertTaskCustomer=\"showConvertTaskCustomer\"\n    :placeholderText=\"__('Search customer')\"\n    @showImportModal=\"show\"\n  />\n  <LeadsListView\n    ref=\"leadsListView\"\n    v-if=\"leads.data && rows.length\"\n    v-model=\"leads.data.page_length_count\"\n    v-model:list=\"leads\"\n    :rows=\"rows\"\n    :columns=\"leads.data.columns\"\n    :options=\"{\n      showTooltip: false,\n      resizeColumn: true,\n      rowCount: leads.data.row_count,\n      totalCount: leads.data.total_count,\n    }\"\n    @loadMore=\"() => loadMore++\"\n    @columnWidthUpdated=\"() => triggerResize++\"\n    @updatePageCount=\"(count) => (updatedPageCount = count)\"\n    @applyFilter=\"(data) => viewControls.applyFilter(data)\"\n  />\n  <div v-else-if=\"leads.data\" class=\"flex h-full items-center justify-center\">\n    <div\n      class=\"flex flex-col items-center gap-3 text-xl font-medium text-gray-500\"\n    >\n      <LeadsIcon class=\"h-10 w-10\" />\n      <span>{{ __('No {0} Found', [__('Leads')]) }}</span>\n      <Button :label=\"__('Create')\" @click=\"showLeadModal = true\">\n        <template #prefix><FeatherIcon name=\"plus\" class=\"h-4\" /></template>\n      </Button>\n    </div>\n  </div>\n  <LeadModal v-model=\"showLeadModal\" />\n  <ImportModal v-model=\"showImportModal\" />\n</template>\n\n<script setup>\nimport CustomActions from '@/components/CustomActions.vue'\nimport LeadsIcon from '@/components/Icons/LeadsIcon.vue'\nimport LayoutHeader from '@/components/LayoutHeader.vue'\nimport LeadsListView from '@/components/ListViews/LeadsListView.vue'\nimport LeadModal from '@/components/Modals/LeadModal.vue'\nimport ImportModal from '@/components/Modals/ImportModal.vue'\nimport ViewControls from '@/components/ViewControls.vue'\nimport { usersStore } from '@/stores/users'\nimport { organizationsStore } from '@/stores/organizations'\nimport { statusesStore } from '@/stores/statuses'\nimport {\n  dateFormat,\n  dateTooltipFormat,\n  timeAgo,\n  formatTime,\n  createToast,\n} from '@/utils'\nimport { createResource, Breadcrumbs } from 'frappe-ui'\nimport { useRouter } from 'vue-router'\nimport { ref, computed, reactive, onMounted } from 'vue'\nimport { sessionStore } from '@/stores/session'\n\n\nconst breadcrumbs = [{ label: __('Leads'), route: { name: 'Leads' } }]\n\nconst { getUser } = usersStore()\nconst { getOrganization } = organizationsStore()\nconst { getLeadStatus } = statusesStore()\nconst { roles } = sessionStore()\n\nconst router = useRouter()\n\nconst showConvertTaskCustomer = ref(false)\n\nonMounted(()=>{\n  let arrRole = roles.data;\n  for(let i = 0; i < arrRole.length; i++){\n    if(arrRole[i] == \"System Manager\"){\n      showConvertTaskCustomer.value = true;\n      break;\n    }\n  }\n})\n\nconst leadsListView = ref(null)\nconst showLeadModal = ref(false)\nconst showImportModal = ref(false)\n// leads data is loaded in the ViewControls component\nconst leads = ref({})\nconst loadMore = ref(1)\nconst triggerResize = ref(1)\nconst updatedPageCount = ref(20)\nconst viewControls = ref(null)\n\n// Rows\nconst rows = computed(() => {\n  if (!leads.value?.data?.data) return []\n  return leads.value?.data.data.map((lead) => {\n    let _rows = {}\n    leads.value?.data.rows.forEach((row) => {\n      _rows[row] = lead[row]\n\n      if (row == 'lead_name') {\n        _rows[row] = {\n          label: lead.first_name,\n          image: lead.image,\n          image_label: lead.first_name,\n        }\n      } else if (row == 'organization') {\n        _rows[row] = {\n          label: lead.organization,\n          logo: getOrganization(lead.organization)?.organization_logo,\n        }\n      } else if (row == 'status') {\n        _rows[row] = {\n          label: lead.status,\n          color: getLeadStatus(lead.status)?.iconColorClass,\n        }\n      } else if (row == 'sla_status') {\n        let value = lead.sla_status\n        let tooltipText = value\n        let color =\n          lead.sla_status == 'Failed'\n            ? 'red'\n            : lead.sla_status == 'Fulfilled'\n            ? 'green'\n            : 'orange'\n        if (value == 'First Response Due') {\n          value = __(timeAgo(lead.response_by))\n          tooltipText = dateFormat(lead.response_by, dateTooltipFormat)\n          if (new Date(lead.response_by) < new Date()) {\n            color = 'red'\n          }\n        }\n        _rows[row] = {\n          label: tooltipText,\n          value: value,\n          color: color,\n        }\n      } else if (row == 'lead_owner') {\n        _rows[row] = {\n          label: lead.lead_owner && getUser(lead.lead_owner).full_name,\n          ...(lead.lead_owner && getUser(lead.lead_owner)),\n        }\n      } else if (row == '_assign') {\n        let assignees = JSON.parse(lead._assign) || []\n        if (!assignees.length && lead.lead_owner) {\n          assignees = [lead.lead_owner]\n        }\n        _rows[row] = assignees.map((user) => ({\n          name: user,\n          image: getUser(user).user_image,\n          label: getUser(user).full_name,\n        }))\n      } else if (['modified', 'creation'].includes(row)) {\n        _rows[row] = {\n          label: dateFormat(lead[row], dateTooltipFormat),\n          timeAgo: __(timeAgo(lead[row])),\n        }\n      } else if (\n        ['first_response_time', 'first_responded_on', 'response_by'].includes(\n          row\n        )\n      ) {\n        let field = row == 'response_by' ? 'response_by' : 'first_responded_on'\n        _rows[row] = {\n          label: lead[field] ? dateFormat(lead[field], dateTooltipFormat) : '',\n          timeAgo: lead[row]\n            ? row == 'first_response_time'\n              ? formatTime(lead[row])\n              : __(timeAgo(lead[row]))\n            : '',\n        }\n      }\n    })\n    return _rows\n  })\n})\n\nlet newLead = reactive({\n  salutation: '',\n  first_name: '',\n  last_name: '',\n  lead_name: '',\n  organization: '',\n  status: '',\n  email: '',\n  mobile_no: '',\n  lead_owner: '',\n})\n\nconst createLead = createResource({\n  url: 'frappe.client.insert',\n  makeParams(values) {\n    return {\n      doc: {\n        doctype: 'CRM Lead',\n        ...values,\n      },\n    }\n  },\n})\n\nfunction createNewLead(close) {\n  createLead\n    .submit(newLead, {\n      validate() {\n        if (!newLead.first_name) {\n          createToast({\n            title: __('Error creating lead'),\n            text: __('First name is required'),\n            icon: 'x',\n            iconClasses: 'text-red-600',\n          })\n          return __('First name is required')\n        }\n      },\n      onSuccess(data) {\n        router.push({\n          name: 'Lead',\n          params: {\n            leadId: data.name,\n          },\n        })\n      },\n    })\n    .then(close)\n}\nfunction show(){\n      showImportModal.value = true;\n      setTimeout(() => {\n        const iframe = document.getElementById('myFrame');\n        if (iframe) {\n    const iframeWindow = iframe.contentWindow\n    if (iframeWindow) {\n      console.log(iframeWindow);\n      // Thêm event listener để đảm bảo rằng nội dung trong iframe đã được load\n      iframeWindow.addEventListener('load', () => {\n        // Truy cập vào phần tử header của body trong iframe\n        const header = iframeWindow.document.querySelector(\".navbar.navbar-expand\");\n        console.log(header);\n        if (header) {\n          // Thêm class 'hidden' để ẩn phần tử header\n          header.style.display = 'none'\n        }\n      })\n    }\n  }\n      }, 100);\n      \n}\n</script>\n"],"names":["emit","__emit","pageLengthCount","_useModel","__props","list","router","useRouter","$dialog","globalStore","watch","val","old_value","showEditModal","ref","selectedValues","unselectAllAction","editValues","selections","unselectAll","deleteValues","close","call","createToast","customBulkActions","customListActions","bulkActions","actions","action","onMounted","_a","setupListActions","_c","_b","_e","_d","__expose","getUser","usersStore","getLeadStatus","statusOptions","statusesStore","show","error","isLeadCreating","lead","reactive","sections","computed","leadStatuses","createLead","createResource","values","statuses","createNewLead","data","hasContent","isDealCreating","createDeal","nextTick","iframe","breadcrumbs","getOrganization","organizationsStore","roles","sessionStore","showConvertTaskCustomer","arrRole","i","leadsListView","showLeadModal","showImportModal","leads","loadMore","triggerResize","updatedPageCount","viewControls","rows","_rows","row","value","tooltipText","color","timeAgo","dateFormat","dateTooltipFormat","assignees","user","field","formatTime","iframeWindow","header"],"mappings":"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"}