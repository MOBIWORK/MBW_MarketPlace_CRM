{"version":3,"file":"Lead-5a40b936.js","sources":["../../../../frontend/src/pages/Lead.vue"],"sourcesContent":["<template>\n  <LayoutHeader v-if=\"lead.data\">\n    <template #left-header>\n      <Breadcrumbs :items=\"breadcrumbs\" />\n    </template>\n    <template #right-header>\n      <CustomActions\n        v-if=\"lead.data._customActions\"\n        :actions=\"lead.data._customActions\"\n      />\n      <component :is=\"lead.data._assignedTo?.length == 1 ? 'Button' : 'div'\">\n        <MultipleAvatar\n          :avatars=\"lead.data._assignedTo\"\n          @click=\"showAssignmentModal = true\"\n        />\n      </component>\n      <Dropdown :options=\"statusOptions('lead', updateField)\">\n        <template #default=\"{ open }\">\n          <Button\n            :label=\"__(lead.data.status)\"\n            :class=\"getLeadStatus(lead.data.status).colorClass\"\n          >\n            <template #prefix>\n              <IndicatorIcon />\n            </template>\n            <template #suffix>\n              <FeatherIcon\n                :name=\"open ? 'chevron-up' : 'chevron-down'\"\n                class=\"h-4\"\n              />\n            </template>\n          </Button>\n        </template>\n      </Dropdown>\n      <Button\n        :label=\"__('Convert to Deal')\"\n        variant=\"solid\"\n        @click=\"showConvertToDealModal = true\"\n      />\n    </template>\n  </LayoutHeader>\n  <div v-if=\"lead?.data\" class=\"flex h-full overflow-hidden\">\n    <Tabs v-model=\"tabIndex\" v-slot=\"{ tab }\" :tabs=\"tabs\">\n      <Activities\n        ref=\"activities\"\n        doctype=\"CRM Lead\"\n        :title=\"tab.name\"\n        v-model:reload=\"reload\"\n        v-model:tabIndex=\"tabIndex\"\n        v-model=\"lead\"\n      />\n    </Tabs>\n    <Resizer class=\"flex flex-col justify-between border-l\" side=\"right\">\n      <div\n        class=\"flex h-10.5 cursor-copy items-center border-b px-5 py-2.5 text-lg font-medium\"\n        @click=\"copyToClipboard(lead.data.name)\"\n      >\n        {{ __(lead.data.name) }}\n      </div>\n      <FileUploader\n        @success=\"(file) => updateField('image', file.file_url)\"\n        :validateFile=\"validateFile\"\n      >\n        <template #default=\"{ openFileSelector, error }\">\n          <div class=\"flex items-center justify-start gap-5 border-b p-5\">\n            <div class=\"group relative size-12\">\n              <Avatar\n                size=\"3xl\"\n                class=\"size-12\"\n                :label=\"lead.data.first_name || __('Untitled')\"\n                :image=\"lead.data.image\"\n              />\n              <component\n                :is=\"lead.data.image ? Dropdown : 'div'\"\n                v-bind=\"\n                  lead.data.image\n                    ? {\n                        options: [\n                          {\n                            icon: 'upload',\n                            label: lead.data.image\n                              ? __('Change image')\n                              : __('Upload image'),\n                            onClick: openFileSelector,\n                          },\n                          {\n                            icon: 'trash-2',\n                            label: __('Remove image'),\n                            onClick: () => updateField('image', ''),\n                          },\n                        ],\n                      }\n                    : { onClick: openFileSelector }\n                \"\n                class=\"!absolute bottom-0 left-0 right-0\"\n              >\n                <div\n                  class=\"z-1 absolute bottom-0.5 left-0 right-0.5 flex h-9 cursor-pointer items-center justify-center rounded-b-full bg-black bg-opacity-40 pt-3 opacity-0 duration-300 ease-in-out group-hover:opacity-100\"\n                  style=\"\n                    -webkit-clip-path: inset(12px 0 0 0);\n                    clip-path: inset(12px 0 0 0);\n                  \"\n                >\n                  <CameraIcon class=\"size-4 cursor-pointer text-white\" />\n                </div>\n              </component>\n            </div>\n            <div class=\"flex flex-col gap-2.5 truncate\">\n              <Tooltip :text=\"lead.data.lead_name || __('Set first name')\">\n                <div class=\"truncate text-2xl font-medium\">\n                  {{ lead.data.lead_name || __('Untitled') }}\n                </div>\n              </Tooltip>\n              <div class=\"flex gap-1.5\">\n                <Tooltip v-if=\"callEnabled\" :text=\"__('Make a call')\">\n                  <Button\n                    class=\"h-7 w-7\"\n                    @click=\"\n                      () =>\n                        lead.data.mobile_no\n                          ? makeCall(lead.data.mobile_no)\n                          : errorMessage(__('No phone number set'))\n                    \"\n                  >\n                    <PhoneIcon class=\"h-4 w-4\" />\n                  </Button>\n                </Tooltip>\n                <Tooltip :text=\"__('Send an email')\">\n                  <Button class=\"h-7 w-7\">\n                    <EmailIcon\n                      class=\"h-4 w-4\"\n                      @click=\"\n                        lead.data.email\n                          ? openEmailBox()\n                          : errorMessage(__('No email set'))\n                      \"\n                    />\n                  </Button>\n                </Tooltip>\n                <Tooltip :text=\"__('Go to website')\">\n                  <Button class=\"h-7 w-7\">\n                    <LinkIcon\n                      class=\"h-4 w-4\"\n                      @click=\"\n                        lead.data.website\n                          ? openWebsite(lead.data.website)\n                          : errorMessage(__('No website set'))\n                      \"\n                    />\n                  </Button>\n                </Tooltip>\n              </div>\n              <ErrorMessage :message=\"__(error)\" />\n            </div>\n          </div>\n        </template>\n      </FileUploader>\n      <SLASection\n        v-if=\"lead.data.sla_status\"\n        v-model=\"lead.data\"\n        @updateField=\"updateField\"\n      />\n      <div\n        v-if=\"detailSections.length\"\n        class=\"flex flex-1 flex-col justify-between overflow-hidden\"\n      >\n        <div class=\"flex flex-col overflow-y-auto\">\n          <div\n            v-for=\"(section, i) in detailSections\"\n            :key=\"section.label\"\n            class=\"flex flex-col p-3\"\n            :class=\"{ 'border-b': i !== detailSections.length - 1 }\"\n          >\n            <Section :is-opened=\"section.opened\" :label=\"section.label\">\n              <SectionFields\n                :fields=\"section.fields\"\n                v-model=\"lead.data\"\n                @update=\"updateField\"\n              />\n            </Section>\n          </div>\n        </div>\n      </div>\n    </Resizer>\n  </div>\n  <AssignmentModal\n    v-if=\"lead.data\"\n    :doc=\"lead.data\"\n    v-model=\"showAssignmentModal\"\n    v-model:assignees=\"lead.data._assignedTo\"\n    @update=\"onUpdateLead\"\n  />\n  <Dialog\n    v-model=\"showConvertToDealModal\"\n    :options=\"{\n      title: __('Convert to Deal'),\n      size: 'xl',\n      actions: [\n        {\n          label: __('Convert'),\n          variant: 'solid',\n          onClick: convertToDeal,\n        },\n      ],\n    }\"\n  >\n    <template #body-content>\n      <div class=\"mb-4 flex items-center gap-2 text-gray-600\">\n        <OrganizationsIcon class=\"h-4 w-4\" />\n        <label class=\"block text-base\">{{ __('Organization') }}</label>\n      </div>\n      <div class=\"ml-6\">\n        <div class=\"flex items-center justify-between text-base\">\n          <div>{{ __('Choose Existing') }}</div>\n          <Switch v-model=\"existingOrganizationChecked\" />\n        </div>\n        <Link\n          v-if=\"existingOrganizationChecked\"\n          class=\"form-control mt-2.5\"\n          variant=\"outline\"\n          size=\"md\"\n          :value=\"existingOrganization\"\n          doctype=\"CRM Organization\"\n          @change=\"(data) => (existingOrganization = data)\"\n        />\n        <div v-else class=\"mt-2.5 text-base\">\n          {{\n            __(\n              'New organization will be created based on the data in details section'\n            )\n          }}\n        </div>\n      </div>\n\n      <div class=\"mb-4 mt-6 flex items-center gap-2 text-gray-600\">\n        <ContactsIcon class=\"h-4 w-4\" />\n        <label class=\"block text-base\">{{ __('Contact') }}</label>\n      </div>\n      <div class=\"ml-6\">\n        <div class=\"flex items-center justify-between text-base\">\n          <div>{{ __('Choose Existing') }}</div>\n          <Switch v-model=\"existingContactChecked\" />\n        </div>\n        <Link\n          v-if=\"existingContactChecked\"\n          class=\"form-control mt-2.5\"\n          variant=\"outline\"\n          size=\"md\"\n          :value=\"existingContact\"\n          doctype=\"Contact\"\n          @change=\"(data) => (existingContact = data)\"\n        />\n        <div v-else class=\"mt-2.5 text-base\">\n          {{ __(\"New contact will be created based on the person's details\") }}\n        </div>\n      </div>\n    </template>\n  </Dialog>\n</template>\n<script setup>\nimport Resizer from '@/components/Resizer.vue'\nimport ActivityIcon from '@/components/Icons/ActivityIcon.vue'\nimport EmailIcon from '@/components/Icons/EmailIcon.vue'\nimport PhoneIcon from '@/components/Icons/PhoneIcon.vue'\nimport TaskIcon from '@/components/Icons/TaskIcon.vue'\nimport NoteIcon from '@/components/Icons/NoteIcon.vue'\nimport WhatsAppIcon from '@/components/Icons/WhatsAppIcon.vue'\nimport CommentIcon from '@/components/Icons/CommentIcon.vue'\nimport IndicatorIcon from '@/components/Icons/IndicatorIcon.vue'\nimport CameraIcon from '@/components/Icons/CameraIcon.vue'\nimport LinkIcon from '@/components/Icons/LinkIcon.vue'\nimport OrganizationsIcon from '@/components/Icons/OrganizationsIcon.vue'\nimport ContactsIcon from '@/components/Icons/ContactsIcon.vue'\nimport LayoutHeader from '@/components/LayoutHeader.vue'\nimport Activities from '@/components/Activities.vue'\nimport AssignmentModal from '@/components/Modals/AssignmentModal.vue'\nimport MultipleAvatar from '@/components/MultipleAvatar.vue'\nimport Link from '@/components/Controls/Link.vue'\nimport Section from '@/components/Section.vue'\nimport SectionFields from '@/components/SectionFields.vue'\nimport SLASection from '@/components/SLASection.vue'\nimport CustomActions from '@/components/CustomActions.vue'\nimport {\n  openWebsite,\n  createToast,\n  setupAssignees,\n  setupCustomActions,\n  errorMessage,\n  copyToClipboard,\n} from '@/utils'\nimport { globalStore } from '@/stores/global'\nimport { contactsStore } from '@/stores/contacts'\nimport { organizationsStore } from '@/stores/organizations'\nimport { statusesStore } from '@/stores/statuses'\nimport { whatsappEnabled, callEnabled } from '@/stores/settings'\nimport {\n  createResource,\n  FileUploader,\n  Dropdown,\n  Tooltip,\n  Avatar,\n  Tabs,\n  Switch,\n  Breadcrumbs,\n  call,\n} from 'frappe-ui'\nimport { ref, computed, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\n\nconst { $dialog, makeCall } = globalStore()\nconst { getContactByName, contacts } = contactsStore()\nconst { organizations } = organizationsStore()\nconst { statusOptions, getLeadStatus } = statusesStore()\nconst router = useRouter()\n\nconst props = defineProps({\n  leadId: {\n    type: String,\n    required: true,\n  },\n})\n\nconst lead = createResource({\n  url: 'crm.fcrm.doctype.crm_lead.api.get_lead',\n  params: { name: props.leadId },\n  cache: ['lead', props.leadId],\n  onSuccess: (data) => {\n    setupAssignees(data)\n    setupCustomActions(data, {\n      doc: data,\n      $dialog,\n      router,\n      updateField,\n      createToast,\n      deleteDoc: deleteLead,\n      call,\n    })\n  },\n})\n\nonMounted(() => {\n  if (lead.data) return\n  lead.fetch()\n})\n\nconst reload = ref(false)\nconst showAssignmentModal = ref(false)\n\nfunction onChangeStatusLead(evt){\n  console.log(\"change lead\", evt);\n}\n\nfunction onUpdateLead(){\n  lead.fetch()\n}\n\nfunction updateLead(fieldname, value, callback) {\n  value = Array.isArray(fieldname) ? '' : value\n\n  if (!Array.isArray(fieldname) && validateRequired(fieldname, value)) return\n\n  createResource({\n    url: 'frappe.client.set_value',\n    params: {\n      doctype: 'CRM Lead',\n      name: props.leadId,\n      fieldname,\n      value,\n    },\n    auto: true,\n    onSuccess: () => {\n      lead.reload()\n      reload.value = true\n      createToast({\n        title: __('Lead updated'),\n        icon: 'check',\n        iconClasses: 'text-green-600',\n      })\n      callback?.()\n    },\n    onError: (err) => {\n      createToast({\n        title: __('Error updating lead'),\n        text: __(err.messages?.[0]),\n        icon: 'x',\n        iconClasses: 'text-red-600',\n      })\n    },\n  })\n}\n\nfunction validateRequired(fieldname, value) {\n  let meta = lead.data.all_fields || {}\n  if (meta[fieldname]?.reqd && !value) {\n    createToast({\n      title: __('Error Updating Lead'),\n      text: __('{0} is a required field', [meta[fieldname].label]),\n      icon: 'x',\n      iconClasses: 'text-red-600',\n    })\n    return true\n  }\n  return false\n}\n\nconst breadcrumbs = computed(() => {\n  let items = [{ label: __('Leads'), route: { name: 'Leads' } }]\n  items.push({\n    label: lead.data.first_name || __('Untitled'),\n    route: { name: 'Lead', params: { leadId: lead.data.name } },\n  })\n  return items\n})\n\nconst tabIndex = ref(0)\n\nconst tabs = computed(() => {\n  let tabOptions = [\n    {\n      name: 'Activity',\n      label: __('Activity'),\n      icon: ActivityIcon,\n    },\n    {\n      name: 'Emails',\n      label: __('Emails'),\n      icon: EmailIcon,\n    },\n    {\n      name: 'Calls',\n      label: __('Calls'),\n      icon: PhoneIcon,\n      condition: () => callEnabled.value,\n    },\n    {\n      name: 'Tasks',\n      label: __('Tasks'),\n      icon: TaskIcon,\n    },\n    {\n      name: 'Notes',\n      label: __('Notes'),\n      icon: NoteIcon,\n    },\n    {\n      name: 'Comment',\n      label: __('Comment'),\n      icon: CommentIcon,\n    },\n    {\n      name: 'WhatsApp',\n      label: __('WhatsApp'),\n      icon: WhatsAppIcon,\n      condition: () => whatsappEnabled.value,\n    },\n  ]\n  return tabOptions.filter((tab) => (tab.condition ? tab.condition() : true))\n})\n\nfunction validateFile(file) {\n  let extn = file.name.split('.').pop().toLowerCase()\n  if (!['png', 'jpg', 'jpeg'].includes(extn)) {\n    return __('Only PNG and JPG images are allowed')\n  }\n}\n\nconst detailSections = computed(() => {\n  let data = lead.data\n  if (!data) return []\n  return data.doctype_fields\n})\n\nfunction updateField(name, value, callback) {\n  updateLead(name, value, () => {\n    lead.data[name] = value\n    callback?.()\n  })\n  if(name == \"status\" && value == \"Chất lượng\"){\n    showConvertToDealModal.value = true;\n  }\n}\n\nasync function deleteLead(name) {\n  await call('frappe.client.delete', {\n    doctype: 'CRM Lead',\n    name,\n  })\n  router.push({ name: 'Leads' })\n}\n\n// Convert to Deal\nconst showConvertToDealModal = ref(false)\nconst existingContactChecked = ref(false)\nconst existingOrganizationChecked = ref(false)\n\nconst existingContact = ref('')\nconst existingOrganization = ref('')\n\nasync function convertToDeal(updated) {\n  let valueUpdated = false\n\n  if (existingContactChecked.value && !existingContact.value) {\n    createToast({\n      title: __('Error'),\n      text: __('Please select an existing contact'),\n      icon: 'x',\n      iconClasses: 'text-red-600',\n    })\n    return\n  }\n\n  if (existingOrganizationChecked.value && !existingOrganization.value) {\n    createToast({\n      title: __('Error'),\n      text: __('Please select an existing organization'),\n      icon: 'x',\n      iconClasses: 'text-red-600',\n    })\n    return\n  }\n\n  if (existingContactChecked.value && existingContact.value) {\n    lead.data.salutation = getContactByName(existingContact.value).salutation\n    lead.data.first_name = getContactByName(existingContact.value).first_name\n    lead.data.last_name = getContactByName(existingContact.value).last_name\n    lead.data.email_id = getContactByName(existingContact.value).email_id\n    lead.data.mobile_no = getContactByName(existingContact.value).mobile_no\n    existingContactChecked.value = false\n    valueUpdated = true\n  }\n\n  if (existingOrganizationChecked.value && existingOrganization.value) {\n    lead.data.organization = existingOrganization.value\n    existingOrganizationChecked.value = false\n    valueUpdated = true\n  }\n\n  if (valueUpdated) {\n    updateLead(\n      {\n        salutation: lead.data.salutation,\n        first_name: lead.data.first_name,\n        last_name: lead.data.last_name,\n        email_id: lead.data.email_id,\n        mobile_no: lead.data.mobile_no,\n        organization: lead.data.organization,\n      },\n      '',\n      () => convertToDeal(true)\n    )\n    showConvertToDealModal.value = false\n  } else {\n    let deal = await call(\n      'crm.fcrm.doctype.crm_lead.crm_lead.convert_to_deal',\n      {\n        lead: lead.data.name,\n      }\n    )\n    if (deal) {\n      if (updated) {\n        await organizations.reload()\n        await contacts.reload()\n      }\n      router.push({ name: 'Deal', params: { dealId: deal } })\n    }\n  }\n}\n\nconst activities = ref(null)\n\nfunction openEmailBox() {\n  activities.value.emailBox.show = true\n}\n</script>\n"],"names":["$dialog","makeCall","globalStore","getContactByName","contacts","contactsStore","organizations","organizationsStore","statusOptions","getLeadStatus","statusesStore","router","useRouter","props","__props","lead","createResource","data","setupAssignees","setupCustomActions","updateField","createToast","deleteLead","call","onMounted","reload","ref","showAssignmentModal","onUpdateLead","updateLead","fieldname","value","callback","validateRequired","err","_a","meta","breadcrumbs","computed","items","tabIndex","tabs","ActivityIcon","EmailIcon","PhoneIcon","callEnabled","TaskIcon","NoteIcon","CommentIcon","WhatsAppIcon","whatsappEnabled","tab","validateFile","file","extn","detailSections","name","showConvertToDealModal","existingContactChecked","existingOrganizationChecked","existingContact","existingOrganization","convertToDeal","updated","valueUpdated","deal","activities","openEmailBox"],"mappings":"gxEAqTA,KAAM,CAAE,QAAAA,EAAS,SAAAC,EAAU,EAAGC,GAAa,EACrC,CAAE,iBAAAC,EAAkB,SAAAC,EAAU,EAAGC,GAAe,EAChD,CAAE,cAAAC,EAAe,EAAGC,GAAoB,EACxC,CAAE,cAAAC,GAAe,cAAAC,EAAe,EAAGC,GAAe,EAClDC,EAASC,GAAW,EAEpBC,EAAQC,EAORC,EAAOC,EAAe,CAC1B,IAAK,yCACL,OAAQ,CAAE,KAAMH,EAAM,MAAQ,EAC9B,MAAO,CAAC,OAAQA,EAAM,MAAM,EAC5B,UAAYI,GAAS,CACnBC,GAAeD,CAAI,EACnBE,GAAmBF,EAAM,CACvB,IAAKA,EACL,QAAAjB,EACA,OAAAW,EACA,YAAAS,EACA,YAAAC,EACA,UAAWC,GACX,KAAAC,CACN,CAAK,CACF,CACH,CAAC,EAEDC,GAAU,IAAM,CACVT,EAAK,MACTA,EAAK,MAAO,CACd,CAAC,EAED,MAAMU,EAASC,EAAI,EAAK,EAClBC,EAAsBD,EAAI,EAAK,EAMrC,SAASE,IAAc,CACrBb,EAAK,MAAO,CACd,CAEA,SAASc,EAAWC,EAAWC,EAAOC,EAAU,CAC9CD,EAAQ,MAAM,QAAQD,CAAS,EAAI,GAAKC,EAEpC,GAAC,MAAM,QAAQD,CAAS,GAAKG,GAAiBH,EAAWC,CAAK,IAElEf,EAAe,CACb,IAAK,0BACL,OAAQ,CACN,QAAS,WACT,KAAMH,EAAM,OACZ,UAAAiB,EACA,MAAAC,CACD,EACD,KAAM,GACN,UAAW,IAAM,CACfhB,EAAK,OAAQ,EACbU,EAAO,MAAQ,GACfJ,EAAY,CACV,MAAO,GAAG,cAAc,EACxB,KAAM,QACN,YAAa,gBACrB,CAAO,EACDW,GAAA,MAAAA,GACD,EACD,QAAUE,GAAQ,OAChBb,EAAY,CACV,MAAO,GAAG,qBAAqB,EAC/B,KAAM,IAAGc,EAAAD,EAAI,WAAJ,YAAAC,EAAe,EAAE,EAC1B,KAAM,IACN,YAAa,cACrB,CAAO,CACF,CACL,CAAG,CACH,CAEA,SAASF,GAAiBH,EAAWC,EAAO,OAC1C,IAAIK,EAAOrB,EAAK,KAAK,YAAc,CAAE,EACrC,OAAIoB,EAAAC,EAAKN,CAAS,IAAd,MAAAK,EAAiB,MAAQ,CAACJ,GAC5BV,EAAY,CACV,MAAO,GAAG,qBAAqB,EAC/B,KAAM,GAAG,0BAA2B,CAACe,EAAKN,CAAS,EAAE,KAAK,CAAC,EAC3D,KAAM,IACN,YAAa,cACnB,CAAK,EACM,IAEF,EACT,CAEA,MAAMO,GAAcC,EAAS,IAAM,CACjC,IAAIC,EAAQ,CAAC,CAAE,MAAO,GAAG,OAAO,EAAG,MAAO,CAAE,KAAM,OAAO,EAAI,EAC7D,OAAAA,EAAM,KAAK,CACT,MAAOxB,EAAK,KAAK,YAAc,GAAG,UAAU,EAC5C,MAAO,CAAE,KAAM,OAAQ,OAAQ,CAAE,OAAQA,EAAK,KAAK,KAAQ,CAC/D,CAAG,EACMwB,CACT,CAAC,EAEKC,EAAWd,EAAI,CAAC,EAEhBe,GAAOH,EAAS,IACH,CACf,CACE,KAAM,WACN,MAAO,GAAG,UAAU,EACpB,KAAMI,EACP,EACD,CACE,KAAM,SACN,MAAO,GAAG,QAAQ,EAClB,KAAMC,CACP,EACD,CACE,KAAM,QACN,MAAO,GAAG,OAAO,EACjB,KAAMC,EACN,UAAW,IAAMC,EAAY,KAC9B,EACD,CACE,KAAM,QACN,MAAO,GAAG,OAAO,EACjB,KAAMC,EACP,EACD,CACE,KAAM,QACN,MAAO,GAAG,OAAO,EACjB,KAAMC,EACP,EACD,CACE,KAAM,UACN,MAAO,GAAG,SAAS,EACnB,KAAMC,EACP,EACD,CACE,KAAM,WACN,MAAO,GAAG,UAAU,EACpB,KAAMC,GACN,UAAW,IAAMC,GAAgB,KAClC,CACF,EACiB,OAAQC,GAASA,EAAI,UAAYA,EAAI,YAAc,EAAK,CAC3E,EAED,SAASC,GAAaC,EAAM,CAC1B,IAAIC,EAAOD,EAAK,KAAK,MAAM,GAAG,EAAE,IAAK,EAAC,YAAa,EACnD,GAAI,CAAC,CAAC,MAAO,MAAO,MAAM,EAAE,SAASC,CAAI,EACvC,OAAO,GAAG,qCAAqC,CAEnD,CAEA,MAAMC,EAAiBjB,EAAS,IAAM,CACpC,IAAIrB,EAAOF,EAAK,KAChB,OAAKE,EACEA,EAAK,eADM,CAAE,CAEtB,CAAC,EAED,SAASG,EAAYoC,EAAMzB,EAAOC,EAAU,CAC1CH,EAAW2B,EAAMzB,EAAO,IAAM,CAC5BhB,EAAK,KAAKyC,CAAI,EAAIzB,EAClBC,GAAA,MAAAA,GACJ,CAAG,EACEwB,GAAQ,UAAYzB,GAAS,eAC9B0B,EAAuB,MAAQ,GAEnC,CAEA,eAAenC,GAAWkC,EAAM,CAC9B,MAAMjC,EAAK,uBAAwB,CACjC,QAAS,WACT,KAAAiC,CACJ,CAAG,EACD7C,EAAO,KAAK,CAAE,KAAM,OAAO,CAAE,CAC/B,CAGA,MAAM8C,EAAyB/B,EAAI,EAAK,EAClCgC,EAAyBhC,EAAI,EAAK,EAClCiC,EAA8BjC,EAAI,EAAK,EAEvCkC,EAAkBlC,EAAI,EAAE,EACxBmC,EAAuBnC,EAAI,EAAE,EAEnC,eAAeoC,EAAcC,EAAS,CACpC,IAAIC,EAAe,GAEnB,GAAIN,EAAuB,OAAS,CAACE,EAAgB,MAAO,CAC1DvC,EAAY,CACV,MAAO,GAAG,OAAO,EACjB,KAAM,GAAG,mCAAmC,EAC5C,KAAM,IACN,YAAa,cACnB,CAAK,EACD,MACD,CAED,GAAIsC,EAA4B,OAAS,CAACE,EAAqB,MAAO,CACpExC,EAAY,CACV,MAAO,GAAG,OAAO,EACjB,KAAM,GAAG,wCAAwC,EACjD,KAAM,IACN,YAAa,cACnB,CAAK,EACD,MACD,CAkBD,GAhBIqC,EAAuB,OAASE,EAAgB,QAClD7C,EAAK,KAAK,WAAaZ,EAAiByD,EAAgB,KAAK,EAAE,WAC/D7C,EAAK,KAAK,WAAaZ,EAAiByD,EAAgB,KAAK,EAAE,WAC/D7C,EAAK,KAAK,UAAYZ,EAAiByD,EAAgB,KAAK,EAAE,UAC9D7C,EAAK,KAAK,SAAWZ,EAAiByD,EAAgB,KAAK,EAAE,SAC7D7C,EAAK,KAAK,UAAYZ,EAAiByD,EAAgB,KAAK,EAAE,UAC9DF,EAAuB,MAAQ,GAC/BM,EAAe,IAGbL,EAA4B,OAASE,EAAqB,QAC5D9C,EAAK,KAAK,aAAe8C,EAAqB,MAC9CF,EAA4B,MAAQ,GACpCK,EAAe,IAGbA,EACFnC,EACE,CACE,WAAYd,EAAK,KAAK,WACtB,WAAYA,EAAK,KAAK,WACtB,UAAWA,EAAK,KAAK,UACrB,SAAUA,EAAK,KAAK,SACpB,UAAWA,EAAK,KAAK,UACrB,aAAcA,EAAK,KAAK,YACzB,EACD,GACA,IAAM+C,EAAc,EAAI,CACzB,EACDL,EAAuB,MAAQ,OAC1B,CACL,IAAIQ,EAAO,MAAM1C,EACf,qDACA,CACE,KAAMR,EAAK,KAAK,IACjB,CACF,EACGkD,IACEF,IACF,MAAMzD,GAAc,OAAQ,EAC5B,MAAMF,GAAS,OAAQ,GAEzBO,EAAO,KAAK,CAAE,KAAM,OAAQ,OAAQ,CAAE,OAAQsD,CAAI,EAAI,EAEzD,CACH,CAEA,MAAMC,EAAaxC,EAAI,IAAI,EAE3B,SAASyC,IAAe,CACtBD,EAAW,MAAM,SAAS,KAAO,EACnC"}