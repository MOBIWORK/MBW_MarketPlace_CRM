{"version":3,"file":"CallLogs-5346a3c3.js","sources":["../../../../frontend/src/components/ListViews/CallLogsListView.vue","../../../../frontend/src/components/Icons/CheckCircleIcon.vue","../../../../frontend/src/components/Modals/CallLogModal.vue","../../../../frontend/src/pages/CallLogs.vue"],"sourcesContent":["<template>\n  <ListView\n    :columns=\"columns\"\n    :rows=\"rows\"\n    :options=\"{\n      onRowClick: (row) => emit('showCallLog', row.name),\n      selectable: options.selectable,\n      showTooltip: options.showTooltip,\n      resizeColumn: options.resizeColumn,\n    }\"\n    row-key=\"name\"\n  >\n    <ListHeader class=\"mx-5\" @columnWidthUpdated=\"emit('columnWidthUpdated')\" />\n    <ListRows id=\"list-rows\">\n      <ListRow\n        class=\"mx-5\"\n        v-for=\"row in rows\"\n        :key=\"row.name\"\n        v-slot=\"{ idx, column, item }\"\n        :row=\"row\"\n      >\n        <ListRowItem :item=\"item\">\n          <template #prefix>\n            <div v-if=\"['caller', 'receiver'].includes(column.key)\">\n              <Avatar\n                v-if=\"item.label\"\n                class=\"flex items-center\"\n                :image=\"item.image\"\n                :label=\"item.label\"\n                size=\"sm\"\n              />\n            </div>\n            <div v-else-if=\"['type', 'duration'].includes(column.key)\">\n              <FeatherIcon :name=\"item.icon\" class=\"h-3 w-3\" />\n            </div>\n          </template>\n          <template #default=\"{ label }\">\n            <div\n              v-if=\"['modified', 'creation'].includes(column.key)\"\n              class=\"truncate text-base\"\n              @click=\"\n                (event) => emit('applyFilter', { event, idx, column, item })\n              \"\n            >\n              <Tooltip :text=\"item.label\">\n                <div>{{ item.timeAgo }}</div>\n              </Tooltip>\n            </div>\n            <div v-else-if=\"column.key === 'status'\" class=\"truncate text-base\">\n              <Badge\n                :variant=\"'subtle'\"\n                :theme=\"item.color\"\n                size=\"md\"\n                :label=\"__(item.label)\"\n                @click=\"\n                  (event) => emit('applyFilter', { event, idx, column, item })\n                \"\n              />\n            </div>\n            <div v-else-if=\"column.type === 'Check'\">\n              <FormControl\n                type=\"checkbox\"\n                :modelValue=\"item\"\n                :disabled=\"true\"\n                class=\"text-gray-900\"\n              />\n            </div>\n            <div\n              v-else\n              class=\"truncate text-base\"\n              @click=\"\n                (event) => emit('applyFilter', { event, idx, column, item })\n              \"\n            >\n            {{ __(label) }}\n            </div>\n          </template>\n        </ListRowItem>\n      </ListRow>\n    </ListRows>\n    <ListSelectBanner>\n      <template #actions=\"{ selections, unselectAll }\">\n        <Dropdown :options=\"bulkActions(selections, unselectAll)\">\n          <Button icon=\"more-horizontal\" variant=\"ghost\" />\n        </Dropdown>\n      </template>\n    </ListSelectBanner>\n  </ListView>\n  <ListFooter\n    class=\"border-t px-5 py-2\"\n    v-model=\"pageLengthCount\"\n    :options=\"{\n      rowCount: options.rowCount,\n      totalCount: options.totalCount,\n    }\"\n    @loadMore=\"emit('loadMore')\"\n  />\n</template>\n<script setup>\nimport {\n  Avatar,\n  ListView,\n  ListHeader,\n  ListRows,\n  ListRow,\n  ListSelectBanner,\n  ListRowItem,\n  ListFooter,\n  Tooltip,\n  Dropdown,\n  call,\n} from 'frappe-ui'\nimport { setupListActions, createToast } from '@/utils'\nimport { globalStore } from '@/stores/global'\nimport { onMounted, ref, watch } from 'vue'\nimport { useRouter } from 'vue-router'\n\nconst props = defineProps({\n  rows: {\n    type: Array,\n    required: true,\n  },\n  columns: {\n    type: Array,\n    required: true,\n  },\n  options: {\n    type: Object,\n    default: () => ({\n      selectable: true,\n      showTooltip: true,\n      resizeColumn: false,\n      totalCount: 0,\n      rowCount: 0,\n    }),\n  },\n})\n\nconst emit = defineEmits([\n  'loadMore',\n  'updatePageCount',\n  'columnWidthUpdated',\n  'applyFilter',\n])\n\nconst pageLengthCount = defineModel()\nconst list = defineModel('list')\n\nconst router = useRouter()\n\nconst { $dialog } = globalStore()\n\nwatch(pageLengthCount, (val, old_value) => {\n  if (val === old_value) return\n  emit('updatePageCount', val)\n})\n\nfunction deleteValues(selections, unselectAll) {\n  $dialog({\n    title: 'Delete',\n    message: `Are you sure you want to delete ${selections.size} item${\n      selections.size > 1 ? 's' : ''\n    }?`,\n    variant: 'danger',\n    actions: [\n      {\n        label: 'Delete',\n        variant: 'solid',\n        theme: 'red',\n        onClick: (close) => {\n          call('frappe.desk.reportview.delete_items', {\n            items: JSON.stringify(Array.from(selections)),\n            doctype: 'CRM Call Log',\n          }).then(() => {\n            createToast({\n              title: 'Deleted successfully',\n              icon: 'check',\n              iconClasses: 'text-green-600',\n            })\n            unselectAll()\n            list.value.reload()\n            close()\n          })\n        },\n      },\n    ],\n  })\n}\n\nconst customBulkActions = ref([])\nconst customListActions = ref([])\n\nfunction bulkActions(selections, unselectAll) {\n  let actions = [\n    {\n      label: 'Delete',\n      onClick: () => deleteValues(selections, unselectAll),\n    },\n  ]\n  customBulkActions.value.forEach((action) => {\n    actions.push({\n      label: action.label,\n      onClick: () =>\n        action.onClick({\n          list: list.value,\n          selections,\n          unselectAll,\n          call,\n          createToast,\n          $dialog,\n          router,\n        }),\n    })\n  })\n  return actions\n}\n\nonMounted(() => {\n  if (!list.value?.data) return\n  setupListActions(list.value.data, {\n    list: list.value,\n    call,\n    createToast,\n    $dialog,\n    router,\n  })\n  customBulkActions.value = list.value?.data?.bulkActions || []\n  customListActions.value = list.value?.data?.listActions || []\n})\n\ndefineExpose({\n  customListActions,\n})\n</script>\n","<template>\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clip-path=\"url(#clip0_3668_69185)\">\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M14.25 8C14.25 11.4518 11.4518 14.25 8 14.25C4.54822 14.25 1.75 11.4518 1.75 8C1.75 4.54822 4.54822 1.75 8 1.75C11.4518 1.75 14.25 4.54822 14.25 8ZM15.25 8C15.25 12.0041 12.0041 15.25 8 15.25C3.99594 15.25 0.75 12.0041 0.75 8C0.75 3.99594 3.99594 0.75 8 0.75C12.0041 0.75 15.25 3.99594 15.25 8ZM11.2909 5.98482C11.4666 5.77175 11.4363 5.45663 11.2232 5.28096C11.0101 5.1053 10.695 5.13561 10.5193 5.34868L7.07001 9.53239L5.72845 7.79857C5.55946 7.58018 5.24543 7.54012 5.02703 7.70911C4.80863 7.8781 4.76858 8.19214 4.93756 8.41053L6.66217 10.6394C6.7552 10.7596 6.89788 10.831 7.04988 10.8334C7.20188 10.8357 7.3467 10.7688 7.4434 10.6515L11.2909 5.98482Z\"\n        fill=\"currentColor\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_3668_69185\">\n        <rect width=\"16\" height=\"16\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n</template>\n","<template>\n  <Dialog v-model=\"show\">\n    <template #body-title>\n      <div class=\"flex items-center gap-3\">\n        <h3 class=\"text-2xl font-semibold leading-6 text-gray-900\">\n          {{ __('Call Details') }}\n        </h3>\n      </div>\n    </template>\n    <template #body-content>\n      <div class=\"flex flex-col gap-3.5\">\n        <div\n          v-for=\"field in detailFields\"\n          :key=\"field.name\"\n          class=\"flex gap-2 text-base text-gray-800\"\n        >\n          <div class=\"grid size-7 place-content-center\">\n            <component :is=\"field.icon\" />\n          </div>\n          <div class=\"flex min-h-7 w-full items-center gap-2\">\n            <div\n              v-if=\"field.name == 'receiver'\"\n              class=\"flex items-center gap-1\"\n            >\n              <Avatar\n                :image=\"field.value.caller.image\"\n                :label=\"field.value.caller.label\"\n                size=\"sm\"\n              />\n              <div class=\"ml-1 flex flex-col gap-1\">\n                {{ field.value.caller.label }}\n              </div>\n              <FeatherIcon\n                name=\"arrow-right\"\n                class=\"mx-1 h-4 w-4 text-gray-600\"\n              />\n              <Avatar\n                :image=\"field.value.receiver.image\"\n                :label=\"field.value.receiver.label\"\n                size=\"sm\"\n              />\n              <div class=\"ml-1 flex flex-col gap-1\">\n                {{ field.value.receiver.label }}\n              </div>\n            </div>\n            <Tooltip v-else-if=\"field.tooltip\" :text=\"field.tooltip\">\n              {{ field.value }}\n            </Tooltip>\n            <div class=\"w-full\" v-else-if=\"field.name == 'recording_url'\">\n              <audio\n                class=\"audio-control w-full\"\n                controls\n                :src=\"field.value\"\n              ></audio>\n            </div>\n            <div\n              class=\"w-full cursor-pointer rounded border px-2 pt-1.5 text-base text-gray-700\"\n              v-else-if=\"field.name == 'note'\"\n              @click=\"() => (showNoteModal = true)\"\n            >\n              <FadedScrollableDiv class=\"max-h-24 min-h-16 overflow-y-auto\">\n                <div\n                  v-if=\"field.value?.title\"\n                  :class=\"[field.value?.content ? 'mb-1 font-bold' : '']\"\n                  v-html=\"field.value?.title\"\n                />\n                <div\n                  v-if=\"field.value?.content\"\n                  v-html=\"field.value?.content\"\n                />\n              </FadedScrollableDiv>\n            </div>\n            <div v-else :class=\"field.color ? `text-${field.color}-600` : ''\">\n              {{ field.value }}\n            </div>\n            <div v-if=\"field.link\">\n              <ArrowUpRightIcon\n                class=\"h-4 w-4 shrink-0 cursor-pointer text-gray-600 hover:text-gray-800\"\n                @click=\"() => field.link()\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </template>\n    <template\n      v-if=\"callLog.type.label == 'Incoming' && !callLog.reference_docname\"\n      #actions\n    >\n      <Button\n        class=\"w-full\"\n        variant=\"solid\"\n        :label=\"__('Create lead')\"\n        @click=\"createLead\"\n      />\n    </template>\n  </Dialog>\n  <NoteModal v-model=\"showNoteModal\" :note=\"callNoteDoc?.doc\" />\n</template>\n\n<script setup>\nimport ArrowUpRightIcon from '@/components/Icons/ArrowUpRightIcon.vue'\nimport DurationIcon from '@/components/Icons/DurationIcon.vue'\nimport ContactsIcon from '@/components/Icons/ContactsIcon.vue'\nimport LeadsIcon from '@/components/Icons/LeadsIcon.vue'\nimport Dealsicon from '@/components/Icons/DealsIcon.vue'\nimport CalendarIcon from '@/components/Icons/CalendarIcon.vue'\nimport NoteIcon from '@/components/Icons/NoteIcon.vue'\nimport CheckCircleIcon from '@/components/Icons/CheckCircleIcon.vue'\nimport NoteModal from '@/components/Modals/NoteModal.vue'\nimport FadedScrollableDiv from '@/components/FadedScrollableDiv.vue'\nimport {\n  FeatherIcon,\n  Avatar,\n  Tooltip,\n  createDocumentResource,\n  call,\n} from 'frappe-ui'\nimport { ref, computed, h, watch } from 'vue'\nimport { useRouter } from 'vue-router'\n\nconst props = defineProps({\n  callLog: {\n    type: Object,\n    default: {},\n  },\n})\n\nconst show = defineModel()\nconst showNoteModal = ref(false)\nconst router = useRouter()\nconst callNoteDoc = ref(null)\n\nconst detailFields = computed(() => {\n  let details = [\n    {\n      icon: h(FeatherIcon, {\n        name: props.callLog.type.icon,\n        class: 'h-3.5 w-3.5',\n      }),\n      name: 'type',\n      value: props.callLog.type.label + ' Call',\n    },\n    {\n      icon: ContactsIcon,\n      name: 'receiver',\n      value: {\n        receiver: props.callLog.receiver,\n        caller: props.callLog.caller,\n      },\n    },\n    {\n      icon:\n        props.callLog.reference_doctype == 'CRM Lead' ? LeadsIcon : Dealsicon,\n      name: 'reference_doctype',\n      value: props.callLog.reference_doctype == 'CRM Lead' ? 'Lead' : 'Deal',\n      link: () => {\n        if (props.callLog.reference_doctype == 'CRM Lead') {\n          router.push({\n            name: 'Lead',\n            params: { leadId: props.callLog.reference_docname },\n          })\n        } else {\n          router.push({\n            name: 'Deal',\n            params: { dealId: props.callLog.reference_docname },\n          })\n        }\n      },\n    },\n    {\n      icon: CalendarIcon,\n      name: 'creation',\n      value: props.callLog.creation.label,\n      tooltip: props.callLog.creation.label,\n    },\n    {\n      icon: DurationIcon,\n      name: 'duration',\n      value: props.callLog.duration.label,\n    },\n    {\n      icon: CheckCircleIcon,\n      name: 'status',\n      value: props.callLog.status.label,\n      color: props.callLog.status.color,\n    },\n    {\n      icon: h(FeatherIcon, {\n        name: 'play-circle',\n        class: 'h-4 w-4 mt-2',\n      }),\n      name: 'recording_url',\n      value: props.callLog.recording_url,\n    },\n    {\n      icon: NoteIcon,\n      name: 'note',\n      value: callNoteDoc.value?.doc,\n    },\n  ]\n\n  return details.filter((detail) => detail.value)\n})\n\nfunction createLead() {\n  call('crm.fcrm.doctype.crm_call_log.crm_call_log.create_lead_from_call_log', {\n    call_log: props.callLog,\n  }).then((d) => {\n    if (d) {\n      router.push({ name: 'Lead', params: { leadId: d } })\n    }\n  })\n}\n\nwatch(show, (val) => {\n  if (val) {\n    callNoteDoc.value = createDocumentResource({\n      doctype: 'FCRM Note',\n      name: props.callLog.note,\n      fields: ['title', 'content'],\n      cache: ['note', props.callLog.note],\n      auto: true,\n    })\n  }\n})\n</script>\n\n<style scoped>\n.audio-control {\n  height: 36px;\n  outline: none;\n  border-radius: 10px;\n  cursor: pointer;\n  background-color: rgb(237, 237, 237);\n}\n\naudio::-webkit-media-controls-panel {\n  background-color: rgb(237, 237, 237) !important;\n}\n\n.audio-control::-webkit-media-controls-panel {\n  background-color: white;\n}\n</style>\n","<template>\n  <LayoutHeader>\n    <template #left-header>\n      <Breadcrumbs :items=\"breadcrumbs\" />\n    </template>\n    <template #right-header>\n      <CustomActions\n        v-if=\"callLogsListView?.customListActions\"\n        :actions=\"callLogsListView.customListActions\"\n      />\n    </template>\n  </LayoutHeader>\n  <ViewControls\n    ref=\"viewControls\"\n    v-model=\"callLogs\"\n    v-model:loadMore=\"loadMore\"\n    v-model:resizeColumn=\"triggerResize\"\n    v-model:updatedPageCount=\"updatedPageCount\"\n    doctype=\"CRM Call Log\"\n  />\n  <CallLogsListView\n    ref=\"callLogsListView\"\n    v-if=\"callLogs.data && rows.length\"\n    v-model=\"callLogs.data.page_length_count\"\n    v-model:list=\"callLogs\"\n    :rows=\"rows\"\n    :columns=\"callLogs.data.columns\"\n    :options=\"{\n      showTooltip: false,\n      resizeColumn: true,\n      rowCount: callLogs.data.row_count,\n      totalCount: callLogs.data.total_count,\n    }\"\n    @showCallLog=\"showCallLog\"\n    @loadMore=\"() => loadMore++\"\n    @columnWidthUpdated=\"() => triggerResize++\"\n    @updatePageCount=\"(count) => (updatedPageCount = count)\"\n    @applyFilter=\"(data) => viewControls.applyFilter(data)\"\n  />\n  <div\n    v-else-if=\"callLogs.data\"\n    class=\"flex h-full items-center justify-center\"\n  >\n    <div\n      class=\"flex flex-col items-center gap-3 text-xl font-medium text-gray-500\"\n    >\n      <PhoneIcon class=\"h-10 w-10\" />\n      <span>{{ __('No {0} Found', [__('Logs')]) }}</span>\n    </div>\n  </div>\n  <CallLogModal\n    v-model=\"showCallLogModal\"\n    v-model:reloadCallLogs=\"callLogs\"\n    :callLog=\"callLog\"\n  />\n</template>\n\n<script setup>\nimport CustomActions from '@/components/CustomActions.vue'\nimport PhoneIcon from '@/components/Icons/PhoneIcon.vue'\nimport LayoutHeader from '@/components/LayoutHeader.vue'\nimport ViewControls from '@/components/ViewControls.vue'\nimport CallLogsListView from '@/components/ListViews/CallLogsListView.vue'\nimport CallLogModal from '@/components/Modals/CallLogModal.vue'\nimport {\n  secondsToDuration,\n  dateFormat,\n  dateTooltipFormat,\n  timeAgo,\n} from '@/utils'\nimport { usersStore } from '@/stores/users'\nimport { contactsStore } from '@/stores/contacts'\nimport { Breadcrumbs } from 'frappe-ui'\nimport { computed, ref } from 'vue'\n\nconst { getUser } = usersStore()\nconst { getContact, getLeadContact } = contactsStore()\n\nconst breadcrumbs = [{ label: __('Call Logs'), route: { name: 'Call Logs' } }]\n\nconst callLogsListView = ref(null)\n\n// callLogs data is loaded in the ViewControls component\nconst callLogs = ref({})\nconst loadMore = ref(1)\nconst triggerResize = ref(1)\nconst updatedPageCount = ref(20)\nconst viewControls = ref(null)\n\nconst rows = computed(() => {\n  if (!callLogs.value?.data?.data) return []\n  return callLogs.value?.data.data.map((callLog) => {\n    let _rows = {}\n    callLogs.value?.data.rows.forEach((row) => {\n      _rows[row] = callLog[row]\n\n      let incoming = callLog.type === 'Incoming'\n\n      if (row === 'caller') {\n        _rows[row] = {\n          label: incoming\n            ? getContact(callLog.from)?.full_name ||\n              getLeadContact(callLog.from)?.full_name ||\n              'Unknown'\n            : getUser(callLog.caller).full_name,\n          image: incoming\n            ? getContact(callLog.from)?.image ||\n              getLeadContact(callLog.from)?.image\n            : getUser(callLog.caller).user_image,\n        }\n      } else if (row === 'receiver') {\n        _rows[row] = {\n          label: incoming\n            ? getUser(callLog.receiver).full_name\n            : getContact(callLog.to)?.full_name ||\n              getLeadContact(callLog.to)?.full_name ||\n              'Unknown',\n          image: incoming\n            ? getUser(callLog.receiver).user_image\n            : getContact(callLog.to)?.image ||\n              getLeadContact(callLog.to)?.image,\n        }\n      } else if (row === 'duration') {\n        _rows[row] = {\n          label: secondsToDuration(callLog.duration),\n          icon: 'clock',\n        }\n      } else if (row === 'type') {\n        _rows[row] = {\n          label: callLog.type,\n          icon: incoming ? 'phone-incoming' : 'phone-outgoing',\n        }\n      } else if (row === 'status') {\n        _rows[row] = {\n          label: statusLabelMap[callLog.status],\n          color: statusColorMap[callLog.status],\n        }\n      } else if (['modified', 'creation'].includes(row)) {\n        _rows[row] = {\n          label: dateFormat(callLog[row], dateTooltipFormat),\n          timeAgo: __(timeAgo(callLog[row])),\n        }\n      }\n    })\n    return _rows\n  })\n})\n\nconst showCallLogModal = ref(false)\n\nconst callLog = ref({\n  name: '',\n  caller: '',\n  receiver: '',\n  duration: '',\n  type: '',\n  status: '',\n  from: '',\n  to: '',\n  note: '',\n  recording_url: '',\n  reference_doctype: '',\n  reference_docname: '',\n  creation: '',\n})\n\nfunction showCallLog(name) {\n  let d = rows.value?.find((row) => row.name === name)\n  callLog.value = {\n    name: d.name,\n    caller: d.caller,\n    receiver: d.receiver,\n    duration: d.duration,\n    type: d.type,\n    status: d.status,\n    from: d.from,\n    to: d.to,\n    note: d.note,\n    recording_url: d.recording_url,\n    reference_doctype: d.reference_doctype,\n    reference_docname: d.reference_docname,\n    creation: d.creation,\n  }\n  showCallLogModal.value = true\n}\n\nconst statusLabelMap = {\n  Completed: 'Completed',\n  Initiated: 'Initiated',\n  Busy: 'Declined',\n  Failed: 'Failed',\n  Queued: 'Queued',\n  Cancelled: 'Cancelled',\n  Ringing: 'Ringing',\n  'No Answer': 'Missed Call',\n  'In Progress': 'In Progress',\n}\n\nconst statusColorMap = {\n  Completed: 'green',\n  Busy: 'orange',\n  Failed: 'red',\n  Initiated: 'gray',\n  Queued: 'gray',\n  Cancelled: 'gray',\n  Ringing: 'gray',\n  'No Answer': 'red',\n  'In Progress': 'blue',\n}\n</script>\n"],"names":["emit","__emit","pageLengthCount","_useModel","__props","list","router","useRouter","$dialog","globalStore","watch","val","old_value","deleteValues","selections","unselectAll","close","call","createToast","customBulkActions","ref","customListActions","bulkActions","actions","action","onMounted","_a","setupListActions","_c","_b","_e","_d","__expose","_hoisted_1","_createElementVNode","_hoisted_4","_hoisted_2","_cache","props","show","showNoteModal","callNoteDoc","detailFields","computed","h","FeatherIcon","ContactsIcon","LeadsIcon","Dealsicon","CalendarIcon","DurationIcon","CheckCircleIcon","NoteIcon","detail","createLead","d","createDocumentResource","getUser","usersStore","getContact","getLeadContact","contactsStore","breadcrumbs","callLogsListView","callLogs","loadMore","triggerResize","updatedPageCount","viewControls","rows","callLog","_rows","row","incoming","_f","_g","_h","secondsToDuration","statusLabelMap","statusColorMap","dateFormat","dateTooltipFormat","timeAgo","showCallLogModal","showCallLog","name"],"mappings":"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"}