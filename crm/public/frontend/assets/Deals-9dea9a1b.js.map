{"version":3,"file":"Deals-9dea9a1b.js","sources":["../../../../frontend/src/components/Modals/DealModal.vue","../../../../frontend/src/pages/Deals.vue"],"sourcesContent":["<template>\n  <Dialog\n    v-model=\"show\"\n    :options=\"{\n      size: '3xl',\n      title: __('Create Deal'),\n    }\"\n  >\n    <template #body-content>\n      <div class=\"mb-4 grid grid-cols-3 gap-4\">\n        <div class=\"flex items-center gap-3 text-sm text-gray-600\">\n          <div>{{ __('Choose Existing Organization') }}</div>\n          <Switch v-model=\"chooseExistingOrganization\" />\n        </div>\n        <div class=\"flex items-center gap-3 text-sm text-gray-600\">\n          <div>{{ __('Choose Existing Contact') }}</div>\n          <Switch v-model=\"chooseExistingContact\" />\n        </div>\n      </div>\n      <Fields class=\"border-t pt-4\" :sections=\"sections\" :data=\"deal\" />\n      <ErrorMessage class=\"mt-4\" v-if=\"error\" :message=\"__(error)\" />\n    </template>\n    <template #actions>\n      <div class=\"flex flex-row-reverse gap-2\">\n        <Button\n          variant=\"solid\"\n          :label=\"__('Create')\"\n          :loading=\"isDealCreating\"\n          @click=\"createDeal\"\n        />\n      </div>\n    </template>\n  </Dialog>\n</template>\n\n<script setup>\nimport Fields from '@/components/Fields.vue'\nimport { usersStore } from '@/stores/users'\nimport { statusesStore } from '@/stores/statuses'\nimport { Switch, createResource } from 'frappe-ui'\nimport { computed, ref, reactive, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\n\nconst { getUser } = usersStore()\nconst { getDealStatus, statusOptions } = statusesStore()\n\nconst show = defineModel()\nconst router = useRouter()\nconst error = ref(null)\n\nconst deal = reactive({\n  organization: '',\n  organization_name: '',\n  website: '',\n  no_of_employees: '',\n  territory: '',\n  annual_revenue: '',\n  industry: '',\n  contact: '',\n  salutation: '',\n  first_name: '',\n  last_name: '',\n  email: '',\n  mobile_no: '',\n  gender: '',\n  status: '',\n  deal_owner: '',\n  assign_to: JSON.stringify([])\n})\n\nconst isDealCreating = ref(false)\nconst chooseExistingContact = ref(false)\nconst chooseExistingOrganization = ref(false)\n\nconst sections = computed(() => {\n  let fields = []\n  if (chooseExistingOrganization.value) {\n    fields.push({\n      section: 'Select Organization',\n      fields: [\n        {\n          label: 'Organization',\n          name: 'organization',\n          type: 'link',\n          placeholder: __('Select Organization'),\n          doctype: 'CRM Organization',\n        },\n      ],\n    })\n  } else {\n    fields.push({\n      section: 'Organization Details',\n      fields: [\n        {\n          label: 'Organization Name',\n          name: 'organization_name',\n          type: 'data'\n        },\n        {\n          label: 'Website',\n          name: 'website',\n          type: 'data'\n        },\n        {\n          label: 'No of Employees',\n          name: 'no_of_employees',\n          type: 'select',\n          options: [\n            { label: __('1-10'), value: '1-10' },\n            { label: __('11-50'), value: '11-50' },\n            { label: __('51-200'), value: '51-200' },\n            { label: __('201-500'), value: '201-500' },\n            { label: __('501-1000'), value: '501-1000' },\n            { label: __('1001-5000'), value: '1001-5000' },\n            { label: __('5001-10000'), value: '5001-10000' },\n            { label: __('10001+'), value: '10001+' },\n          ],\n          placeholder: __('Select No Of Employees'),\n        },\n        {\n          label: 'Territory',\n          name: 'territory',\n          type: 'link',\n          doctype: 'CRM Territory',\n          placeholder: __('Select Territory'),\n        },\n        {\n          label: 'Annual Revenue',\n          name: 'annual_revenue',\n          type: 'data'\n        },\n        {\n          label: 'Industry',\n          name: 'industry',\n          type: 'link',\n          doctype: 'CRM Industry',\n          placeholder: __('Select Industry'),\n        },\n      ],\n    })\n  }\n  if (chooseExistingContact.value) {\n    fields.push({\n      section: 'Select Contact',\n      fields: [\n        {\n          label: 'Contact',\n          name: 'contact',\n          type: 'link',\n          placeholder: __('Select Contact'),\n          doctype: 'Contact',\n        },\n      ],\n    })\n  } else {\n    fields.push({\n      section: 'Contact Details',\n      fields: [\n        {\n          label: 'Salutation',\n          name: 'salutation',\n          type: 'link',\n          doctype: 'Salutation',\n          placeholder: __('Select Salutation'),\n        },\n        {\n          label: 'First Name',\n          name: 'first_name',\n          type: 'data'\n        },\n        // {\n        //   label: 'Last Name',\n        //   name: 'last_name',\n        //   type: 'data',\n        //   placeholder: '',\n        // },\n        {\n          label: 'Email',\n          name: 'email',\n          type: 'data'\n        },\n        {\n          label: 'Mobile No',\n          name: 'mobile_no',\n          type: 'data'\n        },\n        {\n          label: 'Gender',\n          name: 'gender',\n          type: 'link',\n          doctype: 'Gender',\n          placeholder: __('Select Gender'),\n        },\n      ],\n    })\n  }\n  fields.push({\n    section: 'Deal Details',\n    columns: 2,\n    fields: [\n      {\n        label: 'Status',\n        name: 'status',\n        type: 'select',\n        options: dealStatuses.value,\n        prefix: getDealStatus(deal.status).iconColorClass,\n      },\n      {\n        label: 'Deal Owner',\n        name: 'deal_owner',\n        type: 'user',\n        placeholder: __('Deal Owner'),\n        doctype: 'User',\n      },\n    ],\n  })\n  return fields\n})\n\nconst dealStatuses = computed(() => {\n  let statuses = statusOptions('deal')\n  if (!deal.status) {\n    deal.status = statuses[0].value\n  }\n  return statuses\n})\n\nfunction createDeal() {\n  deal.assign_to = JSON.stringify([deal.deal_owner]);\n  createResource({\n    url: 'crm.fcrm.doctype.crm_deal.crm_deal.create_deal',\n    params: { args: deal },\n    auto: true,\n    validate() {\n      error.value = null\n      if (deal.website && !deal.website.startsWith('http')) {\n        deal.website = 'https://' + deal.website\n      }\n      if (deal.annual_revenue) {\n        deal.annual_revenue = deal.annual_revenue.replace(/,/g, '')\n        if (isNaN(deal.annual_revenue)) {\n          error.value = __('Annual Revenue should be a number')\n          return error.value\n        }\n      }\n      const emailRegex = /^[\\w-]+(?:\\.[\\w-]+)*@(?:[\\w-]+\\.)+[a-zA-Z]{2,}$/;\n      if (deal.email && !emailRegex.test(deal.email)) {\n        error.value = __('Invalid Email')\n        return error.value\n      }\n      isDealCreating.value = true\n    },\n    onSuccess(name) {\n      isDealCreating.value = false\n      show.value = false\n      router.push({ name: 'Deal', params: { dealId: name } })\n    },\n  })\n}\n\nonMounted(() => {\n  if (!deal.deal_owner) {\n    deal.deal_owner = getUser().email\n  }\n})\n</script>\n","<template>\n  <LayoutHeader>\n    <template #left-header>\n      <Breadcrumbs :items=\"breadcrumbs\" />\n    </template>\n    <template #right-header>\n      <CustomActions\n        v-if=\"dealsListView?.customListActions\"\n        :actions=\"dealsListView.customListActions\"\n      />\n      <Button\n        variant=\"solid\"\n        :label=\"__('Create')\"\n        @click=\"showDealModal = true\"\n      >\n        <template #prefix><FeatherIcon name=\"plus\" class=\"h-4\" /></template>\n      </Button>\n    </template>\n  </LayoutHeader>\n  <ViewControls\n    ref=\"viewControls\"\n    v-model=\"deals\"\n    v-model:loadMore=\"loadMore\"\n    v-model:resizeColumn=\"triggerResize\"\n    v-model:updatedPageCount=\"updatedPageCount\"\n    doctype=\"CRM Deal\"\n    :showElement=true\n    :showFuncImport=false\n    :showFuncConvertTaskCustomer=\"showConvertTaskCustomer\"\n    :placeholderText=\"__('Search')\"\n    @afterConvertTaskCustomer=\"onAfterConvertTaskCustomer()\"\n  />\n  <DealsListView\n    ref=\"dealsListView\"\n    v-if=\"deals.data && rows.length\"\n    v-model=\"deals.data.page_length_count\"\n    v-model:list=\"deals\"\n    :rows=\"rows\"\n    :columns=\"deals.data.columns\"\n    :options=\"{\n      showTooltip: false,\n      resizeColumn: true,\n      rowCount: deals.data.row_count,\n      totalCount: deals.data.total_count,\n    }\"\n    @loadMore=\"() => loadMore++\"\n    @columnWidthUpdated=\"() => triggerResize++\"\n    @updatePageCount=\"(count) => (updatedPageCount = count)\"\n    @applyFilter=\"(data) => viewControls.applyFilter(data)\"\n  />\n  <div v-else-if=\"deals.data\" class=\"flex h-full items-center justify-center\">\n    <div\n      class=\"flex flex-col items-center gap-3 text-xl font-medium text-gray-500\"\n    >\n      <DealsIcon class=\"h-10 w-10\" />\n      <span>{{ __('No {0} Found', [__('Deals')]) }}</span>\n      <Button :label=\"__('Create')\" @click=\"showDealModal = true\">\n        <template #prefix><FeatherIcon name=\"plus\" class=\"h-4\" /></template>\n      </Button>\n    </div>\n  </div>\n  <DealModal v-model=\"showDealModal\" />\n</template>\n\n<script setup>\nimport CustomActions from '@/components/CustomActions.vue'\nimport DealsIcon from '@/components/Icons/DealsIcon.vue'\nimport LayoutHeader from '@/components/LayoutHeader.vue'\nimport DealsListView from '@/components/ListViews/DealsListView.vue'\nimport DealModal from '@/components/Modals/DealModal.vue'\nimport ViewControls from '@/components/ViewControls.vue'\nimport { usersStore } from '@/stores/users'\nimport { organizationsStore } from '@/stores/organizations'\nimport { statusesStore } from '@/stores/statuses'\nimport {\n  dateFormat,\n  dateTooltipFormat,\n  timeAgo,\n  formatNumberIntoCurrency,\n  formatTime,\n} from '@/utils'\nimport { Breadcrumbs } from 'frappe-ui'\nimport { ref, computed, onMounted } from 'vue'\nimport { sessionStore } from '@/stores/session'\n\nconst breadcrumbs = [{ label: __('Deals'), route: { name: 'Deals' } }]\n\nconst { getUser } = usersStore()\nconst { getOrganization } = organizationsStore()\nconst { getDealStatus } = statusesStore()\nconst { roles } = sessionStore()\n\nconst dealsListView = ref(null)\nconst showDealModal = ref(false)\n\nconst showConvertTaskCustomer = ref(false)\n\nonMounted(()=>{\n  let arrRole = roles.data;\n  for(let i = 0; i < arrRole.length; i++){\n    if(arrRole[i] == \"System Manager\"){\n      showConvertTaskCustomer.value = true;\n      break;\n    }\n  }\n})\n\n// deals data is loaded in the ViewControls component\nconst deals = ref({})\nconst loadMore = ref(1)\nconst triggerResize = ref(1)\nconst updatedPageCount = ref(20)\nconst viewControls = ref(null)\n\n// Rows\nconst rows = computed(() => {\n  if (!deals.value?.data?.data) return []\n  return deals.value.data.data.map((deal) => {\n    let _rows = {}\n    deals.value.data.rows.forEach((row) => {\n      _rows[row] = deal[row]\n\n      if (row == 'organization') {\n        _rows[row] = {\n          label: deal.organization,\n          logo: getOrganization(deal.organization)?.organization_logo,\n        }\n      } else if (row == 'annual_revenue') {\n        _rows[row] = formatNumberIntoCurrency(deal.annual_revenue)\n      } else if (row == 'status') {\n        _rows[row] = {\n          label: deal.status,\n          color: getDealStatus(deal.status)?.iconColorClass,\n        }\n      } else if (row == 'sla_status') {\n        let value = deal.sla_status\n        let tooltipText = value\n        let color =\n          deal.sla_status == 'Failed'\n            ? 'red'\n            : deal.sla_status == 'Fulfilled'\n            ? 'green'\n            : 'orange'\n        if (value == 'First Response Due') {\n          value = __(timeAgo(deal.response_by))\n          tooltipText = dateFormat(deal.response_by, dateTooltipFormat)\n          if (new Date(deal.response_by) < new Date()) {\n            color = 'red'\n          }\n        }\n        _rows[row] = {\n          label: tooltipText,\n          value: value,\n          color: color,\n        }\n      } else if (row == 'deal_owner') {\n        _rows[row] = {\n          label: deal.deal_owner && getUser(deal.deal_owner).full_name,\n          ...(deal.deal_owner && getUser(deal.deal_owner)),\n        }\n      } else if (row == '_assign') {\n        let assignees = JSON.parse(deal._assign) || []\n        if (!assignees.length && deal.deal_owner) {\n          assignees = [deal.deal_owner]\n        }\n        _rows[row] = assignees.map((user) => ({\n          name: user,\n          image: getUser(user).user_image,\n          label: getUser(user).full_name,\n        }))\n      } else if (['modified', 'creation'].includes(row)) {\n        _rows[row] = {\n          label: dateFormat(deal[row], dateTooltipFormat),\n          timeAgo: __(timeAgo(deal[row])),\n        }\n      } else if (\n        ['first_response_time', 'first_responded_on', 'response_by'].includes(\n          row\n        )\n      ) {\n        let field = row == 'response_by' ? 'response_by' : 'first_responded_on'\n        _rows[row] = {\n          label: deal[field] ? dateFormat(deal[field], dateTooltipFormat) : '',\n          timeAgo: deal[row]\n            ? row == 'first_response_time'\n              ? formatTime(deal[row])\n              : __(timeAgo(deal[row]))\n            : '',\n        }\n      }\n    })\n    return _rows\n  })\n})\nfunction onAfterConvertTaskCustomer(){\n  deals.value.reload();\n}\n</script>\n"],"names":["getUser","usersStore","getDealStatus","statusOptions","statusesStore","show","_useModel","router","useRouter","error","ref","deal","reactive","isDealCreating","chooseExistingContact","chooseExistingOrganization","sections","computed","fields","dealStatuses","statuses","createDeal","createResource","emailRegex","name","onMounted","breadcrumbs","getOrganization","organizationsStore","roles","sessionStore","dealsListView","showDealModal","showConvertTaskCustomer","arrRole","i","deals","loadMore","triggerResize","updatedPageCount","viewControls","rows","_b","_a","_rows","row","formatNumberIntoCurrency","value","tooltipText","color","timeAgo","dateFormat","dateTooltipFormat","assignees","user","field","formatTime","onAfterConvertTaskCustomer"],"mappings":"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"}